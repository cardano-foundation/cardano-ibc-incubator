// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package mithrilv1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_Height                protoreflect.MessageDescriptor
	fd_Height_mithril_height protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_Height = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("Height")
	fd_Height_mithril_height = md_Height.Fields().ByName("mithril_height")
}

var _ protoreflect.Message = (*fastReflection_Height)(nil)

type fastReflection_Height Height

func (x *Height) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Height)(x)
}

func (x *Height) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Height_messageType fastReflection_Height_messageType
var _ protoreflect.MessageType = fastReflection_Height_messageType{}

type fastReflection_Height_messageType struct{}

func (x fastReflection_Height_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Height)(nil)
}
func (x fastReflection_Height_messageType) New() protoreflect.Message {
	return new(fastReflection_Height)
}
func (x fastReflection_Height_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Height
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Height) Descriptor() protoreflect.MessageDescriptor {
	return md_Height
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Height) Type() protoreflect.MessageType {
	return _fastReflection_Height_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Height) New() protoreflect.Message {
	return new(fastReflection_Height)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Height) Interface() protoreflect.ProtoMessage {
	return (*Height)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Height) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MithrilHeight != uint64(0) {
		value := protoreflect.ValueOfUint64(x.MithrilHeight)
		if !f(fd_Height_mithril_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Height) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Height.mithril_height":
		return x.MithrilHeight != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Height does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Height.mithril_height":
		x.MithrilHeight = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Height does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Height) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.Height.mithril_height":
		value := x.MithrilHeight
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Height does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Height.mithril_height":
		x.MithrilHeight = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Height does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Height.mithril_height":
		panic(fmt.Errorf("field mithril_height of message ibc.clients.mithril.v1.Height is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Height does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Height) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Height.mithril_height":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Height"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Height does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Height) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.Height", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Height) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Height) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Height) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Height) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Height)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MithrilHeight != 0 {
			n += 1 + runtime.Sov(uint64(x.MithrilHeight))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Height)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MithrilHeight != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.MithrilHeight))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Height)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Height: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Height: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MithrilHeight", wireType)
				}
				x.MithrilHeight = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.MithrilHeight |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ClientState_7_list)(nil)

type _ClientState_7_list struct {
	list *[]string
}

func (x *_ClientState_7_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ClientState_7_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_ClientState_7_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_ClientState_7_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_ClientState_7_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message ClientState at list field UpgradePath as it is not of Message kind"))
}

func (x *_ClientState_7_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_ClientState_7_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_ClientState_7_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ClientState                     protoreflect.MessageDescriptor
	fd_ClientState_chain_id            protoreflect.FieldDescriptor
	fd_ClientState_latest_height       protoreflect.FieldDescriptor
	fd_ClientState_frozen_height       protoreflect.FieldDescriptor
	fd_ClientState_current_epoch       protoreflect.FieldDescriptor
	fd_ClientState_trusting_period     protoreflect.FieldDescriptor
	fd_ClientState_protocol_parameters protoreflect.FieldDescriptor
	fd_ClientState_upgrade_path        protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_ClientState = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("ClientState")
	fd_ClientState_chain_id = md_ClientState.Fields().ByName("chain_id")
	fd_ClientState_latest_height = md_ClientState.Fields().ByName("latest_height")
	fd_ClientState_frozen_height = md_ClientState.Fields().ByName("frozen_height")
	fd_ClientState_current_epoch = md_ClientState.Fields().ByName("current_epoch")
	fd_ClientState_trusting_period = md_ClientState.Fields().ByName("trusting_period")
	fd_ClientState_protocol_parameters = md_ClientState.Fields().ByName("protocol_parameters")
	fd_ClientState_upgrade_path = md_ClientState.Fields().ByName("upgrade_path")
}

var _ protoreflect.Message = (*fastReflection_ClientState)(nil)

type fastReflection_ClientState ClientState

func (x *ClientState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ClientState)(x)
}

func (x *ClientState) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ClientState_messageType fastReflection_ClientState_messageType
var _ protoreflect.MessageType = fastReflection_ClientState_messageType{}

type fastReflection_ClientState_messageType struct{}

func (x fastReflection_ClientState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ClientState)(nil)
}
func (x fastReflection_ClientState_messageType) New() protoreflect.Message {
	return new(fastReflection_ClientState)
}
func (x fastReflection_ClientState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ClientState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ClientState) Descriptor() protoreflect.MessageDescriptor {
	return md_ClientState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ClientState) Type() protoreflect.MessageType {
	return _fastReflection_ClientState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ClientState) New() protoreflect.Message {
	return new(fastReflection_ClientState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ClientState) Interface() protoreflect.ProtoMessage {
	return (*ClientState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ClientState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ChainId != "" {
		value := protoreflect.ValueOfString(x.ChainId)
		if !f(fd_ClientState_chain_id, value) {
			return
		}
	}
	if x.LatestHeight != nil {
		value := protoreflect.ValueOfMessage(x.LatestHeight.ProtoReflect())
		if !f(fd_ClientState_latest_height, value) {
			return
		}
	}
	if x.FrozenHeight != nil {
		value := protoreflect.ValueOfMessage(x.FrozenHeight.ProtoReflect())
		if !f(fd_ClientState_frozen_height, value) {
			return
		}
	}
	if x.CurrentEpoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CurrentEpoch)
		if !f(fd_ClientState_current_epoch, value) {
			return
		}
	}
	if x.TrustingPeriod != nil {
		value := protoreflect.ValueOfMessage(x.TrustingPeriod.ProtoReflect())
		if !f(fd_ClientState_trusting_period, value) {
			return
		}
	}
	if x.ProtocolParameters != nil {
		value := protoreflect.ValueOfMessage(x.ProtocolParameters.ProtoReflect())
		if !f(fd_ClientState_protocol_parameters, value) {
			return
		}
	}
	if len(x.UpgradePath) != 0 {
		value := protoreflect.ValueOfList(&_ClientState_7_list{list: &x.UpgradePath})
		if !f(fd_ClientState_upgrade_path, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ClientState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ClientState.chain_id":
		return x.ChainId != ""
	case "ibc.clients.mithril.v1.ClientState.latest_height":
		return x.LatestHeight != nil
	case "ibc.clients.mithril.v1.ClientState.frozen_height":
		return x.FrozenHeight != nil
	case "ibc.clients.mithril.v1.ClientState.current_epoch":
		return x.CurrentEpoch != uint64(0)
	case "ibc.clients.mithril.v1.ClientState.trusting_period":
		return x.TrustingPeriod != nil
	case "ibc.clients.mithril.v1.ClientState.protocol_parameters":
		return x.ProtocolParameters != nil
	case "ibc.clients.mithril.v1.ClientState.upgrade_path":
		return len(x.UpgradePath) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ClientState.chain_id":
		x.ChainId = ""
	case "ibc.clients.mithril.v1.ClientState.latest_height":
		x.LatestHeight = nil
	case "ibc.clients.mithril.v1.ClientState.frozen_height":
		x.FrozenHeight = nil
	case "ibc.clients.mithril.v1.ClientState.current_epoch":
		x.CurrentEpoch = uint64(0)
	case "ibc.clients.mithril.v1.ClientState.trusting_period":
		x.TrustingPeriod = nil
	case "ibc.clients.mithril.v1.ClientState.protocol_parameters":
		x.ProtocolParameters = nil
	case "ibc.clients.mithril.v1.ClientState.upgrade_path":
		x.UpgradePath = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ClientState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.ClientState.chain_id":
		value := x.ChainId
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.ClientState.latest_height":
		value := x.LatestHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.frozen_height":
		value := x.FrozenHeight
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.current_epoch":
		value := x.CurrentEpoch
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.ClientState.trusting_period":
		value := x.TrustingPeriod
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.protocol_parameters":
		value := x.ProtocolParameters
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.upgrade_path":
		if len(x.UpgradePath) == 0 {
			return protoreflect.ValueOfList(&_ClientState_7_list{})
		}
		listValue := &_ClientState_7_list{list: &x.UpgradePath}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ClientState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ClientState.chain_id":
		x.ChainId = value.Interface().(string)
	case "ibc.clients.mithril.v1.ClientState.latest_height":
		x.LatestHeight = value.Message().Interface().(*Height)
	case "ibc.clients.mithril.v1.ClientState.frozen_height":
		x.FrozenHeight = value.Message().Interface().(*Height)
	case "ibc.clients.mithril.v1.ClientState.current_epoch":
		x.CurrentEpoch = value.Uint()
	case "ibc.clients.mithril.v1.ClientState.trusting_period":
		x.TrustingPeriod = value.Message().Interface().(*durationpb.Duration)
	case "ibc.clients.mithril.v1.ClientState.protocol_parameters":
		x.ProtocolParameters = value.Message().Interface().(*MithrilProtocolParameters)
	case "ibc.clients.mithril.v1.ClientState.upgrade_path":
		lv := value.List()
		clv := lv.(*_ClientState_7_list)
		x.UpgradePath = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ClientState.latest_height":
		if x.LatestHeight == nil {
			x.LatestHeight = new(Height)
		}
		return protoreflect.ValueOfMessage(x.LatestHeight.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.frozen_height":
		if x.FrozenHeight == nil {
			x.FrozenHeight = new(Height)
		}
		return protoreflect.ValueOfMessage(x.FrozenHeight.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.trusting_period":
		if x.TrustingPeriod == nil {
			x.TrustingPeriod = new(durationpb.Duration)
		}
		return protoreflect.ValueOfMessage(x.TrustingPeriod.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.protocol_parameters":
		if x.ProtocolParameters == nil {
			x.ProtocolParameters = new(MithrilProtocolParameters)
		}
		return protoreflect.ValueOfMessage(x.ProtocolParameters.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.upgrade_path":
		if x.UpgradePath == nil {
			x.UpgradePath = []string{}
		}
		value := &_ClientState_7_list{list: &x.UpgradePath}
		return protoreflect.ValueOfList(value)
	case "ibc.clients.mithril.v1.ClientState.chain_id":
		panic(fmt.Errorf("field chain_id of message ibc.clients.mithril.v1.ClientState is not mutable"))
	case "ibc.clients.mithril.v1.ClientState.current_epoch":
		panic(fmt.Errorf("field current_epoch of message ibc.clients.mithril.v1.ClientState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ClientState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ClientState.chain_id":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.ClientState.latest_height":
		m := new(Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.frozen_height":
		m := new(Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.current_epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.ClientState.trusting_period":
		m := new(durationpb.Duration)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.protocol_parameters":
		m := new(MithrilProtocolParameters)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.ClientState.upgrade_path":
		list := []string{}
		return protoreflect.ValueOfList(&_ClientState_7_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ClientState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ClientState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ClientState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.ClientState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ClientState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ClientState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ClientState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ClientState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ChainId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LatestHeight != nil {
			l = options.Size(x.LatestHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.FrozenHeight != nil {
			l = options.Size(x.FrozenHeight)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CurrentEpoch != 0 {
			n += 1 + runtime.Sov(uint64(x.CurrentEpoch))
		}
		if x.TrustingPeriod != nil {
			l = options.Size(x.TrustingPeriod)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProtocolParameters != nil {
			l = options.Size(x.ProtocolParameters)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.UpgradePath) > 0 {
			for _, s := range x.UpgradePath {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UpgradePath) > 0 {
			for iNdEx := len(x.UpgradePath) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.UpgradePath[iNdEx])
				copy(dAtA[i:], x.UpgradePath[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UpgradePath[iNdEx])))
				i--
				dAtA[i] = 0x3a
			}
		}
		if x.ProtocolParameters != nil {
			encoded, err := options.Marshal(x.ProtocolParameters)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.TrustingPeriod != nil {
			encoded, err := options.Marshal(x.TrustingPeriod)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.CurrentEpoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CurrentEpoch))
			i--
			dAtA[i] = 0x20
		}
		if x.FrozenHeight != nil {
			encoded, err := options.Marshal(x.FrozenHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.LatestHeight != nil {
			encoded, err := options.Marshal(x.LatestHeight)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ChainId) > 0 {
			i -= len(x.ChainId)
			copy(dAtA[i:], x.ChainId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ChainId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ClientState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClientState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ClientState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ChainId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ChainId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.LatestHeight == nil {
					x.LatestHeight = &Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.LatestHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FrozenHeight", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.FrozenHeight == nil {
					x.FrozenHeight = &Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.FrozenHeight); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CurrentEpoch", wireType)
				}
				x.CurrentEpoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CurrentEpoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TrustingPeriod", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TrustingPeriod == nil {
					x.TrustingPeriod = &durationpb.Duration{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TrustingPeriod); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtocolParameters", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProtocolParameters == nil {
					x.ProtocolParameters = &MithrilProtocolParameters{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProtocolParameters); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpgradePath", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UpgradePath = append(x.UpgradePath, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_ConsensusState                          protoreflect.MessageDescriptor
	fd_ConsensusState_timestamp                protoreflect.FieldDescriptor
	fd_ConsensusState_fc_hash_latest_epoch_msd protoreflect.FieldDescriptor
	fd_ConsensusState_latest_cert_hash_msd     protoreflect.FieldDescriptor
	fd_ConsensusState_fc_hash_latest_epoch_ts  protoreflect.FieldDescriptor
	fd_ConsensusState_latest_cert_hash_ts      protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_ConsensusState = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("ConsensusState")
	fd_ConsensusState_timestamp = md_ConsensusState.Fields().ByName("timestamp")
	fd_ConsensusState_fc_hash_latest_epoch_msd = md_ConsensusState.Fields().ByName("fc_hash_latest_epoch_msd")
	fd_ConsensusState_latest_cert_hash_msd = md_ConsensusState.Fields().ByName("latest_cert_hash_msd")
	fd_ConsensusState_fc_hash_latest_epoch_ts = md_ConsensusState.Fields().ByName("fc_hash_latest_epoch_ts")
	fd_ConsensusState_latest_cert_hash_ts = md_ConsensusState.Fields().ByName("latest_cert_hash_ts")
}

var _ protoreflect.Message = (*fastReflection_ConsensusState)(nil)

type fastReflection_ConsensusState ConsensusState

func (x *ConsensusState) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ConsensusState)(x)
}

func (x *ConsensusState) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ConsensusState_messageType fastReflection_ConsensusState_messageType
var _ protoreflect.MessageType = fastReflection_ConsensusState_messageType{}

type fastReflection_ConsensusState_messageType struct{}

func (x fastReflection_ConsensusState_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ConsensusState)(nil)
}
func (x fastReflection_ConsensusState_messageType) New() protoreflect.Message {
	return new(fastReflection_ConsensusState)
}
func (x fastReflection_ConsensusState_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsensusState
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ConsensusState) Descriptor() protoreflect.MessageDescriptor {
	return md_ConsensusState
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ConsensusState) Type() protoreflect.MessageType {
	return _fastReflection_ConsensusState_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ConsensusState) New() protoreflect.Message {
	return new(fastReflection_ConsensusState)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ConsensusState) Interface() protoreflect.ProtoMessage {
	return (*ConsensusState)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ConsensusState) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Timestamp != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Timestamp)
		if !f(fd_ConsensusState_timestamp, value) {
			return
		}
	}
	if x.FcHashLatestEpochMsd != "" {
		value := protoreflect.ValueOfString(x.FcHashLatestEpochMsd)
		if !f(fd_ConsensusState_fc_hash_latest_epoch_msd, value) {
			return
		}
	}
	if x.LatestCertHashMsd != "" {
		value := protoreflect.ValueOfString(x.LatestCertHashMsd)
		if !f(fd_ConsensusState_latest_cert_hash_msd, value) {
			return
		}
	}
	if x.FcHashLatestEpochTs != "" {
		value := protoreflect.ValueOfString(x.FcHashLatestEpochTs)
		if !f(fd_ConsensusState_fc_hash_latest_epoch_ts, value) {
			return
		}
	}
	if x.LatestCertHashTs != "" {
		value := protoreflect.ValueOfString(x.LatestCertHashTs)
		if !f(fd_ConsensusState_latest_cert_hash_ts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ConsensusState) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ConsensusState.timestamp":
		return x.Timestamp != uint64(0)
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_msd":
		return x.FcHashLatestEpochMsd != ""
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_msd":
		return x.LatestCertHashMsd != ""
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_ts":
		return x.FcHashLatestEpochTs != ""
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_ts":
		return x.LatestCertHashTs != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ConsensusState.timestamp":
		x.Timestamp = uint64(0)
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_msd":
		x.FcHashLatestEpochMsd = ""
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_msd":
		x.LatestCertHashMsd = ""
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_ts":
		x.FcHashLatestEpochTs = ""
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_ts":
		x.LatestCertHashTs = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ConsensusState) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.ConsensusState.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_msd":
		value := x.FcHashLatestEpochMsd
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_msd":
		value := x.LatestCertHashMsd
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_ts":
		value := x.FcHashLatestEpochTs
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_ts":
		value := x.LatestCertHashTs
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ConsensusState does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ConsensusState.timestamp":
		x.Timestamp = value.Uint()
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_msd":
		x.FcHashLatestEpochMsd = value.Interface().(string)
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_msd":
		x.LatestCertHashMsd = value.Interface().(string)
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_ts":
		x.FcHashLatestEpochTs = value.Interface().(string)
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_ts":
		x.LatestCertHashTs = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ConsensusState.timestamp":
		panic(fmt.Errorf("field timestamp of message ibc.clients.mithril.v1.ConsensusState is not mutable"))
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_msd":
		panic(fmt.Errorf("field fc_hash_latest_epoch_msd of message ibc.clients.mithril.v1.ConsensusState is not mutable"))
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_msd":
		panic(fmt.Errorf("field latest_cert_hash_msd of message ibc.clients.mithril.v1.ConsensusState is not mutable"))
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_ts":
		panic(fmt.Errorf("field fc_hash_latest_epoch_ts of message ibc.clients.mithril.v1.ConsensusState is not mutable"))
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_ts":
		panic(fmt.Errorf("field latest_cert_hash_ts of message ibc.clients.mithril.v1.ConsensusState is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ConsensusState) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ConsensusState.timestamp":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_msd":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_msd":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.ConsensusState.fc_hash_latest_epoch_ts":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.ConsensusState.latest_cert_hash_ts":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ConsensusState"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ConsensusState does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ConsensusState) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.ConsensusState", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ConsensusState) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ConsensusState) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ConsensusState) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ConsensusState) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Timestamp != 0 {
			n += 1 + runtime.Sov(uint64(x.Timestamp))
		}
		l = len(x.FcHashLatestEpochMsd)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LatestCertHashMsd)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FcHashLatestEpochTs)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.LatestCertHashTs)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.LatestCertHashTs) > 0 {
			i -= len(x.LatestCertHashTs)
			copy(dAtA[i:], x.LatestCertHashTs)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LatestCertHashTs)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.FcHashLatestEpochTs) > 0 {
			i -= len(x.FcHashLatestEpochTs)
			copy(dAtA[i:], x.FcHashLatestEpochTs)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FcHashLatestEpochTs)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.LatestCertHashMsd) > 0 {
			i -= len(x.LatestCertHashMsd)
			copy(dAtA[i:], x.LatestCertHashMsd)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.LatestCertHashMsd)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.FcHashLatestEpochMsd) > 0 {
			i -= len(x.FcHashLatestEpochMsd)
			copy(dAtA[i:], x.FcHashLatestEpochMsd)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FcHashLatestEpochMsd)))
			i--
			dAtA[i] = 0x12
		}
		if x.Timestamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timestamp))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ConsensusState)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsensusState: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ConsensusState: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				x.Timestamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timestamp |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FcHashLatestEpochMsd", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FcHashLatestEpochMsd = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestCertHashMsd", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestCertHashMsd = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FcHashLatestEpochTs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FcHashLatestEpochTs = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LatestCertHashTs", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.LatestCertHashTs = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_Misbehaviour                  protoreflect.MessageDescriptor
	fd_Misbehaviour_client_id        protoreflect.FieldDescriptor
	fd_Misbehaviour_mithril_header_1 protoreflect.FieldDescriptor
	fd_Misbehaviour_mithril_header_2 protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_Misbehaviour = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("Misbehaviour")
	fd_Misbehaviour_client_id = md_Misbehaviour.Fields().ByName("client_id")
	fd_Misbehaviour_mithril_header_1 = md_Misbehaviour.Fields().ByName("mithril_header_1")
	fd_Misbehaviour_mithril_header_2 = md_Misbehaviour.Fields().ByName("mithril_header_2")
}

var _ protoreflect.Message = (*fastReflection_Misbehaviour)(nil)

type fastReflection_Misbehaviour Misbehaviour

func (x *Misbehaviour) ProtoReflect() protoreflect.Message {
	return (*fastReflection_Misbehaviour)(x)
}

func (x *Misbehaviour) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_Misbehaviour_messageType fastReflection_Misbehaviour_messageType
var _ protoreflect.MessageType = fastReflection_Misbehaviour_messageType{}

type fastReflection_Misbehaviour_messageType struct{}

func (x fastReflection_Misbehaviour_messageType) Zero() protoreflect.Message {
	return (*fastReflection_Misbehaviour)(nil)
}
func (x fastReflection_Misbehaviour_messageType) New() protoreflect.Message {
	return new(fastReflection_Misbehaviour)
}
func (x fastReflection_Misbehaviour_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_Misbehaviour
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_Misbehaviour) Descriptor() protoreflect.MessageDescriptor {
	return md_Misbehaviour
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_Misbehaviour) Type() protoreflect.MessageType {
	return _fastReflection_Misbehaviour_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_Misbehaviour) New() protoreflect.Message {
	return new(fastReflection_Misbehaviour)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_Misbehaviour) Interface() protoreflect.ProtoMessage {
	return (*Misbehaviour)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_Misbehaviour) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ClientId != "" {
		value := protoreflect.ValueOfString(x.ClientId)
		if !f(fd_Misbehaviour_client_id, value) {
			return
		}
	}
	if x.MithrilHeader_1 != nil {
		value := protoreflect.ValueOfMessage(x.MithrilHeader_1.ProtoReflect())
		if !f(fd_Misbehaviour_mithril_header_1, value) {
			return
		}
	}
	if x.MithrilHeader_2 != nil {
		value := protoreflect.ValueOfMessage(x.MithrilHeader_2.ProtoReflect())
		if !f(fd_Misbehaviour_mithril_header_2, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_Misbehaviour) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Misbehaviour.client_id":
		return x.ClientId != ""
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_1":
		return x.MithrilHeader_1 != nil
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_2":
		return x.MithrilHeader_2 != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Misbehaviour.client_id":
		x.ClientId = ""
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_1":
		x.MithrilHeader_1 = nil
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_2":
		x.MithrilHeader_2 = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_Misbehaviour) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.Misbehaviour.client_id":
		value := x.ClientId
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_1":
		value := x.MithrilHeader_1
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_2":
		value := x.MithrilHeader_2
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Misbehaviour does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Misbehaviour.client_id":
		x.ClientId = value.Interface().(string)
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_1":
		x.MithrilHeader_1 = value.Message().Interface().(*MithrilHeader)
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_2":
		x.MithrilHeader_2 = value.Message().Interface().(*MithrilHeader)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_1":
		if x.MithrilHeader_1 == nil {
			x.MithrilHeader_1 = new(MithrilHeader)
		}
		return protoreflect.ValueOfMessage(x.MithrilHeader_1.ProtoReflect())
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_2":
		if x.MithrilHeader_2 == nil {
			x.MithrilHeader_2 = new(MithrilHeader)
		}
		return protoreflect.ValueOfMessage(x.MithrilHeader_2.ProtoReflect())
	case "ibc.clients.mithril.v1.Misbehaviour.client_id":
		panic(fmt.Errorf("field client_id of message ibc.clients.mithril.v1.Misbehaviour is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_Misbehaviour) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.Misbehaviour.client_id":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_1":
		m := new(MithrilHeader)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.Misbehaviour.mithril_header_2":
		m := new(MithrilHeader)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.Misbehaviour"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.Misbehaviour does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_Misbehaviour) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.Misbehaviour", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_Misbehaviour) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_Misbehaviour) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_Misbehaviour) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_Misbehaviour) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*Misbehaviour)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ClientId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MithrilHeader_1 != nil {
			l = options.Size(x.MithrilHeader_1)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MithrilHeader_2 != nil {
			l = options.Size(x.MithrilHeader_2)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*Misbehaviour)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.MithrilHeader_2 != nil {
			encoded, err := options.Marshal(x.MithrilHeader_2)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.MithrilHeader_1 != nil {
			encoded, err := options.Marshal(x.MithrilHeader_1)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ClientId) > 0 {
			i -= len(x.ClientId)
			copy(dAtA[i:], x.ClientId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ClientId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*Misbehaviour)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Misbehaviour: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: Misbehaviour: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ClientId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ClientId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MithrilHeader_1", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MithrilHeader_1 == nil {
					x.MithrilHeader_1 = &MithrilHeader{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MithrilHeader_1); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MithrilHeader_2", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MithrilHeader_2 == nil {
					x.MithrilHeader_2 = &MithrilHeader{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MithrilHeader_2); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MithrilHeader                                        protoreflect.MessageDescriptor
	fd_MithrilHeader_mithril_stake_distribution             protoreflect.FieldDescriptor
	fd_MithrilHeader_mithril_stake_distribution_certificate protoreflect.FieldDescriptor
	fd_MithrilHeader_transaction_snapshot                   protoreflect.FieldDescriptor
	fd_MithrilHeader_transaction_snapshot_certificate       protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_MithrilHeader = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("MithrilHeader")
	fd_MithrilHeader_mithril_stake_distribution = md_MithrilHeader.Fields().ByName("mithril_stake_distribution")
	fd_MithrilHeader_mithril_stake_distribution_certificate = md_MithrilHeader.Fields().ByName("mithril_stake_distribution_certificate")
	fd_MithrilHeader_transaction_snapshot = md_MithrilHeader.Fields().ByName("transaction_snapshot")
	fd_MithrilHeader_transaction_snapshot_certificate = md_MithrilHeader.Fields().ByName("transaction_snapshot_certificate")
}

var _ protoreflect.Message = (*fastReflection_MithrilHeader)(nil)

type fastReflection_MithrilHeader MithrilHeader

func (x *MithrilHeader) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MithrilHeader)(x)
}

func (x *MithrilHeader) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MithrilHeader_messageType fastReflection_MithrilHeader_messageType
var _ protoreflect.MessageType = fastReflection_MithrilHeader_messageType{}

type fastReflection_MithrilHeader_messageType struct{}

func (x fastReflection_MithrilHeader_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MithrilHeader)(nil)
}
func (x fastReflection_MithrilHeader_messageType) New() protoreflect.Message {
	return new(fastReflection_MithrilHeader)
}
func (x fastReflection_MithrilHeader_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilHeader
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MithrilHeader) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilHeader
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MithrilHeader) Type() protoreflect.MessageType {
	return _fastReflection_MithrilHeader_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MithrilHeader) New() protoreflect.Message {
	return new(fastReflection_MithrilHeader)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MithrilHeader) Interface() protoreflect.ProtoMessage {
	return (*MithrilHeader)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MithrilHeader) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MithrilStakeDistribution != nil {
		value := protoreflect.ValueOfMessage(x.MithrilStakeDistribution.ProtoReflect())
		if !f(fd_MithrilHeader_mithril_stake_distribution, value) {
			return
		}
	}
	if x.MithrilStakeDistributionCertificate != nil {
		value := protoreflect.ValueOfMessage(x.MithrilStakeDistributionCertificate.ProtoReflect())
		if !f(fd_MithrilHeader_mithril_stake_distribution_certificate, value) {
			return
		}
	}
	if x.TransactionSnapshot != nil {
		value := protoreflect.ValueOfMessage(x.TransactionSnapshot.ProtoReflect())
		if !f(fd_MithrilHeader_transaction_snapshot, value) {
			return
		}
	}
	if x.TransactionSnapshotCertificate != nil {
		value := protoreflect.ValueOfMessage(x.TransactionSnapshotCertificate.ProtoReflect())
		if !f(fd_MithrilHeader_transaction_snapshot_certificate, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MithrilHeader) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution":
		return x.MithrilStakeDistribution != nil
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution_certificate":
		return x.MithrilStakeDistributionCertificate != nil
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot":
		return x.TransactionSnapshot != nil
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot_certificate":
		return x.TransactionSnapshotCertificate != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilHeader"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilHeader does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilHeader) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution":
		x.MithrilStakeDistribution = nil
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution_certificate":
		x.MithrilStakeDistributionCertificate = nil
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot":
		x.TransactionSnapshot = nil
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot_certificate":
		x.TransactionSnapshotCertificate = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilHeader"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilHeader does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MithrilHeader) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution":
		value := x.MithrilStakeDistribution
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution_certificate":
		value := x.MithrilStakeDistributionCertificate
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot":
		value := x.TransactionSnapshot
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot_certificate":
		value := x.TransactionSnapshotCertificate
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilHeader"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilHeader does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilHeader) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution":
		x.MithrilStakeDistribution = value.Message().Interface().(*MithrilStakeDistribution)
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution_certificate":
		x.MithrilStakeDistributionCertificate = value.Message().Interface().(*MithrilCertificate)
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot":
		x.TransactionSnapshot = value.Message().Interface().(*CardanoTransactionSnapshot)
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot_certificate":
		x.TransactionSnapshotCertificate = value.Message().Interface().(*MithrilCertificate)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilHeader"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilHeader does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilHeader) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution":
		if x.MithrilStakeDistribution == nil {
			x.MithrilStakeDistribution = new(MithrilStakeDistribution)
		}
		return protoreflect.ValueOfMessage(x.MithrilStakeDistribution.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution_certificate":
		if x.MithrilStakeDistributionCertificate == nil {
			x.MithrilStakeDistributionCertificate = new(MithrilCertificate)
		}
		return protoreflect.ValueOfMessage(x.MithrilStakeDistributionCertificate.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot":
		if x.TransactionSnapshot == nil {
			x.TransactionSnapshot = new(CardanoTransactionSnapshot)
		}
		return protoreflect.ValueOfMessage(x.TransactionSnapshot.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot_certificate":
		if x.TransactionSnapshotCertificate == nil {
			x.TransactionSnapshotCertificate = new(MithrilCertificate)
		}
		return protoreflect.ValueOfMessage(x.TransactionSnapshotCertificate.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilHeader"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilHeader does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MithrilHeader) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution":
		m := new(MithrilStakeDistribution)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution_certificate":
		m := new(MithrilCertificate)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot":
		m := new(CardanoTransactionSnapshot)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot_certificate":
		m := new(MithrilCertificate)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilHeader"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilHeader does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MithrilHeader) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.MithrilHeader", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MithrilHeader) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilHeader) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MithrilHeader) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MithrilHeader) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MithrilHeader)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.MithrilStakeDistribution != nil {
			l = options.Size(x.MithrilStakeDistribution)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.MithrilStakeDistributionCertificate != nil {
			l = options.Size(x.MithrilStakeDistributionCertificate)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransactionSnapshot != nil {
			l = options.Size(x.TransactionSnapshot)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransactionSnapshotCertificate != nil {
			l = options.Size(x.TransactionSnapshotCertificate)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MithrilHeader)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.TransactionSnapshotCertificate != nil {
			encoded, err := options.Marshal(x.TransactionSnapshotCertificate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.TransactionSnapshot != nil {
			encoded, err := options.Marshal(x.TransactionSnapshot)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.MithrilStakeDistributionCertificate != nil {
			encoded, err := options.Marshal(x.MithrilStakeDistributionCertificate)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if x.MithrilStakeDistribution != nil {
			encoded, err := options.Marshal(x.MithrilStakeDistribution)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MithrilHeader)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilHeader: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilHeader: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MithrilStakeDistribution", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MithrilStakeDistribution == nil {
					x.MithrilStakeDistribution = &MithrilStakeDistribution{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MithrilStakeDistribution); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MithrilStakeDistributionCertificate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.MithrilStakeDistributionCertificate == nil {
					x.MithrilStakeDistributionCertificate = &MithrilCertificate{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MithrilStakeDistributionCertificate); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransactionSnapshot", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TransactionSnapshot == nil {
					x.TransactionSnapshot = &CardanoTransactionSnapshot{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransactionSnapshot); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransactionSnapshotCertificate", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TransactionSnapshotCertificate == nil {
					x.TransactionSnapshotCertificate = &MithrilCertificate{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransactionSnapshotCertificate); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MithrilStakeDistribution_2_list)(nil)

type _MithrilStakeDistribution_2_list struct {
	list *[]*SignerWithStake
}

func (x *_MithrilStakeDistribution_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MithrilStakeDistribution_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_MithrilStakeDistribution_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SignerWithStake)
	(*x.list)[i] = concreteValue
}

func (x *_MithrilStakeDistribution_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SignerWithStake)
	*x.list = append(*x.list, concreteValue)
}

func (x *_MithrilStakeDistribution_2_list) AppendMutable() protoreflect.Value {
	v := new(SignerWithStake)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MithrilStakeDistribution_2_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_MithrilStakeDistribution_2_list) NewElement() protoreflect.Value {
	v := new(SignerWithStake)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_MithrilStakeDistribution_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MithrilStakeDistribution                    protoreflect.MessageDescriptor
	fd_MithrilStakeDistribution_epoch              protoreflect.FieldDescriptor
	fd_MithrilStakeDistribution_signers_with_stake protoreflect.FieldDescriptor
	fd_MithrilStakeDistribution_hash               protoreflect.FieldDescriptor
	fd_MithrilStakeDistribution_certificate_hash   protoreflect.FieldDescriptor
	fd_MithrilStakeDistribution_created_at         protoreflect.FieldDescriptor
	fd_MithrilStakeDistribution_protocol_parameter protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_MithrilStakeDistribution = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("MithrilStakeDistribution")
	fd_MithrilStakeDistribution_epoch = md_MithrilStakeDistribution.Fields().ByName("epoch")
	fd_MithrilStakeDistribution_signers_with_stake = md_MithrilStakeDistribution.Fields().ByName("signers_with_stake")
	fd_MithrilStakeDistribution_hash = md_MithrilStakeDistribution.Fields().ByName("hash")
	fd_MithrilStakeDistribution_certificate_hash = md_MithrilStakeDistribution.Fields().ByName("certificate_hash")
	fd_MithrilStakeDistribution_created_at = md_MithrilStakeDistribution.Fields().ByName("created_at")
	fd_MithrilStakeDistribution_protocol_parameter = md_MithrilStakeDistribution.Fields().ByName("protocol_parameter")
}

var _ protoreflect.Message = (*fastReflection_MithrilStakeDistribution)(nil)

type fastReflection_MithrilStakeDistribution MithrilStakeDistribution

func (x *MithrilStakeDistribution) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MithrilStakeDistribution)(x)
}

func (x *MithrilStakeDistribution) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MithrilStakeDistribution_messageType fastReflection_MithrilStakeDistribution_messageType
var _ protoreflect.MessageType = fastReflection_MithrilStakeDistribution_messageType{}

type fastReflection_MithrilStakeDistribution_messageType struct{}

func (x fastReflection_MithrilStakeDistribution_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MithrilStakeDistribution)(nil)
}
func (x fastReflection_MithrilStakeDistribution_messageType) New() protoreflect.Message {
	return new(fastReflection_MithrilStakeDistribution)
}
func (x fastReflection_MithrilStakeDistribution_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilStakeDistribution
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MithrilStakeDistribution) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilStakeDistribution
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MithrilStakeDistribution) Type() protoreflect.MessageType {
	return _fastReflection_MithrilStakeDistribution_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MithrilStakeDistribution) New() protoreflect.Message {
	return new(fastReflection_MithrilStakeDistribution)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MithrilStakeDistribution) Interface() protoreflect.ProtoMessage {
	return (*MithrilStakeDistribution)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MithrilStakeDistribution) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Epoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Epoch)
		if !f(fd_MithrilStakeDistribution_epoch, value) {
			return
		}
	}
	if len(x.SignersWithStake) != 0 {
		value := protoreflect.ValueOfList(&_MithrilStakeDistribution_2_list{list: &x.SignersWithStake})
		if !f(fd_MithrilStakeDistribution_signers_with_stake, value) {
			return
		}
	}
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_MithrilStakeDistribution_hash, value) {
			return
		}
	}
	if x.CertificateHash != "" {
		value := protoreflect.ValueOfString(x.CertificateHash)
		if !f(fd_MithrilStakeDistribution_certificate_hash, value) {
			return
		}
	}
	if x.CreatedAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.CreatedAt)
		if !f(fd_MithrilStakeDistribution_created_at, value) {
			return
		}
	}
	if x.ProtocolParameter != nil {
		value := protoreflect.ValueOfMessage(x.ProtocolParameter.ProtoReflect())
		if !f(fd_MithrilStakeDistribution_protocol_parameter, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MithrilStakeDistribution) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.epoch":
		return x.Epoch != uint64(0)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.signers_with_stake":
		return len(x.SignersWithStake) != 0
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.hash":
		return x.Hash != ""
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.certificate_hash":
		return x.CertificateHash != ""
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.created_at":
		return x.CreatedAt != uint64(0)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.protocol_parameter":
		return x.ProtocolParameter != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilStakeDistribution"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilStakeDistribution does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilStakeDistribution) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.epoch":
		x.Epoch = uint64(0)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.signers_with_stake":
		x.SignersWithStake = nil
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.hash":
		x.Hash = ""
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.certificate_hash":
		x.CertificateHash = ""
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.created_at":
		x.CreatedAt = uint64(0)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.protocol_parameter":
		x.ProtocolParameter = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilStakeDistribution"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilStakeDistribution does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MithrilStakeDistribution) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.epoch":
		value := x.Epoch
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.signers_with_stake":
		if len(x.SignersWithStake) == 0 {
			return protoreflect.ValueOfList(&_MithrilStakeDistribution_2_list{})
		}
		listValue := &_MithrilStakeDistribution_2_list{list: &x.SignersWithStake}
		return protoreflect.ValueOfList(listValue)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.certificate_hash":
		value := x.CertificateHash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.created_at":
		value := x.CreatedAt
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.protocol_parameter":
		value := x.ProtocolParameter
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilStakeDistribution"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilStakeDistribution does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilStakeDistribution) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.epoch":
		x.Epoch = value.Uint()
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.signers_with_stake":
		lv := value.List()
		clv := lv.(*_MithrilStakeDistribution_2_list)
		x.SignersWithStake = *clv.list
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.hash":
		x.Hash = value.Interface().(string)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.certificate_hash":
		x.CertificateHash = value.Interface().(string)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.created_at":
		x.CreatedAt = value.Uint()
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.protocol_parameter":
		x.ProtocolParameter = value.Message().Interface().(*MithrilProtocolParameters)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilStakeDistribution"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilStakeDistribution does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilStakeDistribution) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.signers_with_stake":
		if x.SignersWithStake == nil {
			x.SignersWithStake = []*SignerWithStake{}
		}
		value := &_MithrilStakeDistribution_2_list{list: &x.SignersWithStake}
		return protoreflect.ValueOfList(value)
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.protocol_parameter":
		if x.ProtocolParameter == nil {
			x.ProtocolParameter = new(MithrilProtocolParameters)
		}
		return protoreflect.ValueOfMessage(x.ProtocolParameter.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.epoch":
		panic(fmt.Errorf("field epoch of message ibc.clients.mithril.v1.MithrilStakeDistribution is not mutable"))
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.hash":
		panic(fmt.Errorf("field hash of message ibc.clients.mithril.v1.MithrilStakeDistribution is not mutable"))
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.certificate_hash":
		panic(fmt.Errorf("field certificate_hash of message ibc.clients.mithril.v1.MithrilStakeDistribution is not mutable"))
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.created_at":
		panic(fmt.Errorf("field created_at of message ibc.clients.mithril.v1.MithrilStakeDistribution is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilStakeDistribution"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilStakeDistribution does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MithrilStakeDistribution) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.signers_with_stake":
		list := []*SignerWithStake{}
		return protoreflect.ValueOfList(&_MithrilStakeDistribution_2_list{list: &list})
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.certificate_hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.created_at":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.MithrilStakeDistribution.protocol_parameter":
		m := new(MithrilProtocolParameters)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilStakeDistribution"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilStakeDistribution does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MithrilStakeDistribution) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.MithrilStakeDistribution", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MithrilStakeDistribution) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilStakeDistribution) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MithrilStakeDistribution) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MithrilStakeDistribution) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MithrilStakeDistribution)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Epoch != 0 {
			n += 1 + runtime.Sov(uint64(x.Epoch))
		}
		if len(x.SignersWithStake) > 0 {
			for _, e := range x.SignersWithStake {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CertificateHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.CreatedAt != 0 {
			n += 1 + runtime.Sov(uint64(x.CreatedAt))
		}
		if x.ProtocolParameter != nil {
			l = options.Size(x.ProtocolParameter)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MithrilStakeDistribution)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.ProtocolParameter != nil {
			encoded, err := options.Marshal(x.ProtocolParameter)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.CreatedAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CreatedAt))
			i--
			dAtA[i] = 0x28
		}
		if len(x.CertificateHash) > 0 {
			i -= len(x.CertificateHash)
			copy(dAtA[i:], x.CertificateHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CertificateHash)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.SignersWithStake) > 0 {
			for iNdEx := len(x.SignersWithStake) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.SignersWithStake[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x12
			}
		}
		if x.Epoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Epoch))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MithrilStakeDistribution)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilStakeDistribution: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilStakeDistribution: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
				}
				x.Epoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Epoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignersWithStake", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SignersWithStake = append(x.SignersWithStake, &SignerWithStake{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.SignersWithStake[len(x.SignersWithStake)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CertificateHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CertificateHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
				}
				x.CreatedAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CreatedAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtocolParameter", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProtocolParameter == nil {
					x.ProtocolParameter = &MithrilProtocolParameters{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProtocolParameter); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_CardanoTransactionSnapshot                  protoreflect.MessageDescriptor
	fd_CardanoTransactionSnapshot_snapshot_hash    protoreflect.FieldDescriptor
	fd_CardanoTransactionSnapshot_merkle_root      protoreflect.FieldDescriptor
	fd_CardanoTransactionSnapshot_certificate_hash protoreflect.FieldDescriptor
	fd_CardanoTransactionSnapshot_epoch            protoreflect.FieldDescriptor
	fd_CardanoTransactionSnapshot_height           protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_CardanoTransactionSnapshot = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("CardanoTransactionSnapshot")
	fd_CardanoTransactionSnapshot_snapshot_hash = md_CardanoTransactionSnapshot.Fields().ByName("snapshot_hash")
	fd_CardanoTransactionSnapshot_merkle_root = md_CardanoTransactionSnapshot.Fields().ByName("merkle_root")
	fd_CardanoTransactionSnapshot_certificate_hash = md_CardanoTransactionSnapshot.Fields().ByName("certificate_hash")
	fd_CardanoTransactionSnapshot_epoch = md_CardanoTransactionSnapshot.Fields().ByName("epoch")
	fd_CardanoTransactionSnapshot_height = md_CardanoTransactionSnapshot.Fields().ByName("height")
}

var _ protoreflect.Message = (*fastReflection_CardanoTransactionSnapshot)(nil)

type fastReflection_CardanoTransactionSnapshot CardanoTransactionSnapshot

func (x *CardanoTransactionSnapshot) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CardanoTransactionSnapshot)(x)
}

func (x *CardanoTransactionSnapshot) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CardanoTransactionSnapshot_messageType fastReflection_CardanoTransactionSnapshot_messageType
var _ protoreflect.MessageType = fastReflection_CardanoTransactionSnapshot_messageType{}

type fastReflection_CardanoTransactionSnapshot_messageType struct{}

func (x fastReflection_CardanoTransactionSnapshot_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CardanoTransactionSnapshot)(nil)
}
func (x fastReflection_CardanoTransactionSnapshot_messageType) New() protoreflect.Message {
	return new(fastReflection_CardanoTransactionSnapshot)
}
func (x fastReflection_CardanoTransactionSnapshot_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CardanoTransactionSnapshot
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CardanoTransactionSnapshot) Descriptor() protoreflect.MessageDescriptor {
	return md_CardanoTransactionSnapshot
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CardanoTransactionSnapshot) Type() protoreflect.MessageType {
	return _fastReflection_CardanoTransactionSnapshot_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CardanoTransactionSnapshot) New() protoreflect.Message {
	return new(fastReflection_CardanoTransactionSnapshot)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CardanoTransactionSnapshot) Interface() protoreflect.ProtoMessage {
	return (*CardanoTransactionSnapshot)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CardanoTransactionSnapshot) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.SnapshotHash != "" {
		value := protoreflect.ValueOfString(x.SnapshotHash)
		if !f(fd_CardanoTransactionSnapshot_snapshot_hash, value) {
			return
		}
	}
	if x.MerkleRoot != "" {
		value := protoreflect.ValueOfString(x.MerkleRoot)
		if !f(fd_CardanoTransactionSnapshot_merkle_root, value) {
			return
		}
	}
	if x.CertificateHash != "" {
		value := protoreflect.ValueOfString(x.CertificateHash)
		if !f(fd_CardanoTransactionSnapshot_certificate_hash, value) {
			return
		}
	}
	if x.Epoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Epoch)
		if !f(fd_CardanoTransactionSnapshot_epoch, value) {
			return
		}
	}
	if x.Height != nil {
		value := protoreflect.ValueOfMessage(x.Height.ProtoReflect())
		if !f(fd_CardanoTransactionSnapshot_height, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CardanoTransactionSnapshot) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.snapshot_hash":
		return x.SnapshotHash != ""
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.merkle_root":
		return x.MerkleRoot != ""
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.certificate_hash":
		return x.CertificateHash != ""
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.epoch":
		return x.Epoch != uint64(0)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.height":
		return x.Height != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CardanoTransactionSnapshot"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CardanoTransactionSnapshot does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CardanoTransactionSnapshot) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.snapshot_hash":
		x.SnapshotHash = ""
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.merkle_root":
		x.MerkleRoot = ""
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.certificate_hash":
		x.CertificateHash = ""
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.epoch":
		x.Epoch = uint64(0)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.height":
		x.Height = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CardanoTransactionSnapshot"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CardanoTransactionSnapshot does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CardanoTransactionSnapshot) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.snapshot_hash":
		value := x.SnapshotHash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.merkle_root":
		value := x.MerkleRoot
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.certificate_hash":
		value := x.CertificateHash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.epoch":
		value := x.Epoch
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.height":
		value := x.Height
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CardanoTransactionSnapshot"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CardanoTransactionSnapshot does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CardanoTransactionSnapshot) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.snapshot_hash":
		x.SnapshotHash = value.Interface().(string)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.merkle_root":
		x.MerkleRoot = value.Interface().(string)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.certificate_hash":
		x.CertificateHash = value.Interface().(string)
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.epoch":
		x.Epoch = value.Uint()
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.height":
		x.Height = value.Message().Interface().(*Height)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CardanoTransactionSnapshot"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CardanoTransactionSnapshot does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CardanoTransactionSnapshot) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.height":
		if x.Height == nil {
			x.Height = new(Height)
		}
		return protoreflect.ValueOfMessage(x.Height.ProtoReflect())
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.snapshot_hash":
		panic(fmt.Errorf("field snapshot_hash of message ibc.clients.mithril.v1.CardanoTransactionSnapshot is not mutable"))
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.merkle_root":
		panic(fmt.Errorf("field merkle_root of message ibc.clients.mithril.v1.CardanoTransactionSnapshot is not mutable"))
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.certificate_hash":
		panic(fmt.Errorf("field certificate_hash of message ibc.clients.mithril.v1.CardanoTransactionSnapshot is not mutable"))
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.epoch":
		panic(fmt.Errorf("field epoch of message ibc.clients.mithril.v1.CardanoTransactionSnapshot is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CardanoTransactionSnapshot"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CardanoTransactionSnapshot does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CardanoTransactionSnapshot) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.snapshot_hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.merkle_root":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.certificate_hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.CardanoTransactionSnapshot.height":
		m := new(Height)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CardanoTransactionSnapshot"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CardanoTransactionSnapshot does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CardanoTransactionSnapshot) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.CardanoTransactionSnapshot", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CardanoTransactionSnapshot) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CardanoTransactionSnapshot) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CardanoTransactionSnapshot) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CardanoTransactionSnapshot) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CardanoTransactionSnapshot)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.SnapshotHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MerkleRoot)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.CertificateHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Epoch != 0 {
			n += 1 + runtime.Sov(uint64(x.Epoch))
		}
		if x.Height != nil {
			l = options.Size(x.Height)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CardanoTransactionSnapshot)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Height != nil {
			encoded, err := options.Marshal(x.Height)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.Epoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Epoch))
			i--
			dAtA[i] = 0x20
		}
		if len(x.CertificateHash) > 0 {
			i -= len(x.CertificateHash)
			copy(dAtA[i:], x.CertificateHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.CertificateHash)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.MerkleRoot) > 0 {
			i -= len(x.MerkleRoot)
			copy(dAtA[i:], x.MerkleRoot)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MerkleRoot)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.SnapshotHash) > 0 {
			i -= len(x.SnapshotHash)
			copy(dAtA[i:], x.SnapshotHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SnapshotHash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CardanoTransactionSnapshot)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CardanoTransactionSnapshot: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CardanoTransactionSnapshot: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SnapshotHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SnapshotHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MerkleRoot", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MerkleRoot = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CertificateHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.CertificateHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
				}
				x.Epoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Epoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Height == nil {
					x.Height = &Height{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Height); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MithrilCertificate                            protoreflect.MessageDescriptor
	fd_MithrilCertificate_hash                       protoreflect.FieldDescriptor
	fd_MithrilCertificate_previous_hash              protoreflect.FieldDescriptor
	fd_MithrilCertificate_epoch                      protoreflect.FieldDescriptor
	fd_MithrilCertificate_signed_entity_type         protoreflect.FieldDescriptor
	fd_MithrilCertificate_metadata                   protoreflect.FieldDescriptor
	fd_MithrilCertificate_protocol_message           protoreflect.FieldDescriptor
	fd_MithrilCertificate_signed_message             protoreflect.FieldDescriptor
	fd_MithrilCertificate_aggregate_verification_key protoreflect.FieldDescriptor
	fd_MithrilCertificate_signature                  protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_MithrilCertificate = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("MithrilCertificate")
	fd_MithrilCertificate_hash = md_MithrilCertificate.Fields().ByName("hash")
	fd_MithrilCertificate_previous_hash = md_MithrilCertificate.Fields().ByName("previous_hash")
	fd_MithrilCertificate_epoch = md_MithrilCertificate.Fields().ByName("epoch")
	fd_MithrilCertificate_signed_entity_type = md_MithrilCertificate.Fields().ByName("signed_entity_type")
	fd_MithrilCertificate_metadata = md_MithrilCertificate.Fields().ByName("metadata")
	fd_MithrilCertificate_protocol_message = md_MithrilCertificate.Fields().ByName("protocol_message")
	fd_MithrilCertificate_signed_message = md_MithrilCertificate.Fields().ByName("signed_message")
	fd_MithrilCertificate_aggregate_verification_key = md_MithrilCertificate.Fields().ByName("aggregate_verification_key")
	fd_MithrilCertificate_signature = md_MithrilCertificate.Fields().ByName("signature")
}

var _ protoreflect.Message = (*fastReflection_MithrilCertificate)(nil)

type fastReflection_MithrilCertificate MithrilCertificate

func (x *MithrilCertificate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MithrilCertificate)(x)
}

func (x *MithrilCertificate) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MithrilCertificate_messageType fastReflection_MithrilCertificate_messageType
var _ protoreflect.MessageType = fastReflection_MithrilCertificate_messageType{}

type fastReflection_MithrilCertificate_messageType struct{}

func (x fastReflection_MithrilCertificate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MithrilCertificate)(nil)
}
func (x fastReflection_MithrilCertificate_messageType) New() protoreflect.Message {
	return new(fastReflection_MithrilCertificate)
}
func (x fastReflection_MithrilCertificate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilCertificate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MithrilCertificate) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilCertificate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MithrilCertificate) Type() protoreflect.MessageType {
	return _fastReflection_MithrilCertificate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MithrilCertificate) New() protoreflect.Message {
	return new(fastReflection_MithrilCertificate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MithrilCertificate) Interface() protoreflect.ProtoMessage {
	return (*MithrilCertificate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MithrilCertificate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Hash != "" {
		value := protoreflect.ValueOfString(x.Hash)
		if !f(fd_MithrilCertificate_hash, value) {
			return
		}
	}
	if x.PreviousHash != "" {
		value := protoreflect.ValueOfString(x.PreviousHash)
		if !f(fd_MithrilCertificate_previous_hash, value) {
			return
		}
	}
	if x.Epoch != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Epoch)
		if !f(fd_MithrilCertificate_epoch, value) {
			return
		}
	}
	if x.SignedEntityType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.SignedEntityType))
		if !f(fd_MithrilCertificate_signed_entity_type, value) {
			return
		}
	}
	if x.Metadata != nil {
		value := protoreflect.ValueOfMessage(x.Metadata.ProtoReflect())
		if !f(fd_MithrilCertificate_metadata, value) {
			return
		}
	}
	if x.ProtocolMessage != nil {
		value := protoreflect.ValueOfMessage(x.ProtocolMessage.ProtoReflect())
		if !f(fd_MithrilCertificate_protocol_message, value) {
			return
		}
	}
	if x.SignedMessage != "" {
		value := protoreflect.ValueOfString(x.SignedMessage)
		if !f(fd_MithrilCertificate_signed_message, value) {
			return
		}
	}
	if x.AggregateVerificationKey != "" {
		value := protoreflect.ValueOfString(x.AggregateVerificationKey)
		if !f(fd_MithrilCertificate_aggregate_verification_key, value) {
			return
		}
	}
	if x.Signature != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.Signature))
		if !f(fd_MithrilCertificate_signature, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MithrilCertificate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilCertificate.hash":
		return x.Hash != ""
	case "ibc.clients.mithril.v1.MithrilCertificate.previous_hash":
		return x.PreviousHash != ""
	case "ibc.clients.mithril.v1.MithrilCertificate.epoch":
		return x.Epoch != uint64(0)
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_entity_type":
		return x.SignedEntityType != 0
	case "ibc.clients.mithril.v1.MithrilCertificate.metadata":
		return x.Metadata != nil
	case "ibc.clients.mithril.v1.MithrilCertificate.protocol_message":
		return x.ProtocolMessage != nil
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_message":
		return x.SignedMessage != ""
	case "ibc.clients.mithril.v1.MithrilCertificate.aggregate_verification_key":
		return x.AggregateVerificationKey != ""
	case "ibc.clients.mithril.v1.MithrilCertificate.signature":
		return x.Signature != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilCertificate"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilCertificate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilCertificate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilCertificate.hash":
		x.Hash = ""
	case "ibc.clients.mithril.v1.MithrilCertificate.previous_hash":
		x.PreviousHash = ""
	case "ibc.clients.mithril.v1.MithrilCertificate.epoch":
		x.Epoch = uint64(0)
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_entity_type":
		x.SignedEntityType = 0
	case "ibc.clients.mithril.v1.MithrilCertificate.metadata":
		x.Metadata = nil
	case "ibc.clients.mithril.v1.MithrilCertificate.protocol_message":
		x.ProtocolMessage = nil
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_message":
		x.SignedMessage = ""
	case "ibc.clients.mithril.v1.MithrilCertificate.aggregate_verification_key":
		x.AggregateVerificationKey = ""
	case "ibc.clients.mithril.v1.MithrilCertificate.signature":
		x.Signature = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilCertificate"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilCertificate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MithrilCertificate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.MithrilCertificate.hash":
		value := x.Hash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.MithrilCertificate.previous_hash":
		value := x.PreviousHash
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.MithrilCertificate.epoch":
		value := x.Epoch
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_entity_type":
		value := x.SignedEntityType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "ibc.clients.mithril.v1.MithrilCertificate.metadata":
		value := x.Metadata
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilCertificate.protocol_message":
		value := x.ProtocolMessage
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_message":
		value := x.SignedMessage
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.MithrilCertificate.aggregate_verification_key":
		value := x.AggregateVerificationKey
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.MithrilCertificate.signature":
		value := x.Signature
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilCertificate"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilCertificate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilCertificate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilCertificate.hash":
		x.Hash = value.Interface().(string)
	case "ibc.clients.mithril.v1.MithrilCertificate.previous_hash":
		x.PreviousHash = value.Interface().(string)
	case "ibc.clients.mithril.v1.MithrilCertificate.epoch":
		x.Epoch = value.Uint()
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_entity_type":
		x.SignedEntityType = (SignedEntityType)(value.Enum())
	case "ibc.clients.mithril.v1.MithrilCertificate.metadata":
		x.Metadata = value.Message().Interface().(*CertificateMetadata)
	case "ibc.clients.mithril.v1.MithrilCertificate.protocol_message":
		x.ProtocolMessage = value.Message().Interface().(*ProtocolMessage)
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_message":
		x.SignedMessage = value.Interface().(string)
	case "ibc.clients.mithril.v1.MithrilCertificate.aggregate_verification_key":
		x.AggregateVerificationKey = value.Interface().(string)
	case "ibc.clients.mithril.v1.MithrilCertificate.signature":
		x.Signature = (CertificateSignature)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilCertificate"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilCertificate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilCertificate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilCertificate.metadata":
		if x.Metadata == nil {
			x.Metadata = new(CertificateMetadata)
		}
		return protoreflect.ValueOfMessage(x.Metadata.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilCertificate.protocol_message":
		if x.ProtocolMessage == nil {
			x.ProtocolMessage = new(ProtocolMessage)
		}
		return protoreflect.ValueOfMessage(x.ProtocolMessage.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilCertificate.hash":
		panic(fmt.Errorf("field hash of message ibc.clients.mithril.v1.MithrilCertificate is not mutable"))
	case "ibc.clients.mithril.v1.MithrilCertificate.previous_hash":
		panic(fmt.Errorf("field previous_hash of message ibc.clients.mithril.v1.MithrilCertificate is not mutable"))
	case "ibc.clients.mithril.v1.MithrilCertificate.epoch":
		panic(fmt.Errorf("field epoch of message ibc.clients.mithril.v1.MithrilCertificate is not mutable"))
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_entity_type":
		panic(fmt.Errorf("field signed_entity_type of message ibc.clients.mithril.v1.MithrilCertificate is not mutable"))
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_message":
		panic(fmt.Errorf("field signed_message of message ibc.clients.mithril.v1.MithrilCertificate is not mutable"))
	case "ibc.clients.mithril.v1.MithrilCertificate.aggregate_verification_key":
		panic(fmt.Errorf("field aggregate_verification_key of message ibc.clients.mithril.v1.MithrilCertificate is not mutable"))
	case "ibc.clients.mithril.v1.MithrilCertificate.signature":
		panic(fmt.Errorf("field signature of message ibc.clients.mithril.v1.MithrilCertificate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilCertificate"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilCertificate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MithrilCertificate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilCertificate.hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.MithrilCertificate.previous_hash":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.MithrilCertificate.epoch":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_entity_type":
		return protoreflect.ValueOfEnum(0)
	case "ibc.clients.mithril.v1.MithrilCertificate.metadata":
		m := new(CertificateMetadata)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilCertificate.protocol_message":
		m := new(ProtocolMessage)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.MithrilCertificate.signed_message":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.MithrilCertificate.aggregate_verification_key":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.MithrilCertificate.signature":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilCertificate"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilCertificate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MithrilCertificate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.MithrilCertificate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MithrilCertificate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilCertificate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MithrilCertificate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MithrilCertificate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MithrilCertificate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Hash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.PreviousHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Epoch != 0 {
			n += 1 + runtime.Sov(uint64(x.Epoch))
		}
		if x.SignedEntityType != 0 {
			n += 1 + runtime.Sov(uint64(x.SignedEntityType))
		}
		if x.Metadata != nil {
			l = options.Size(x.Metadata)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProtocolMessage != nil {
			l = options.Size(x.ProtocolMessage)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SignedMessage)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.AggregateVerificationKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Signature != 0 {
			n += 1 + runtime.Sov(uint64(x.Signature))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MithrilCertificate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Signature != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Signature))
			i--
			dAtA[i] = 0x48
		}
		if len(x.AggregateVerificationKey) > 0 {
			i -= len(x.AggregateVerificationKey)
			copy(dAtA[i:], x.AggregateVerificationKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.AggregateVerificationKey)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.SignedMessage) > 0 {
			i -= len(x.SignedMessage)
			copy(dAtA[i:], x.SignedMessage)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SignedMessage)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ProtocolMessage != nil {
			encoded, err := options.Marshal(x.ProtocolMessage)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.Metadata != nil {
			encoded, err := options.Marshal(x.Metadata)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.SignedEntityType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SignedEntityType))
			i--
			dAtA[i] = 0x20
		}
		if x.Epoch != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Epoch))
			i--
			dAtA[i] = 0x18
		}
		if len(x.PreviousHash) > 0 {
			i -= len(x.PreviousHash)
			copy(dAtA[i:], x.PreviousHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PreviousHash)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Hash) > 0 {
			i -= len(x.Hash)
			copy(dAtA[i:], x.Hash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Hash)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MithrilCertificate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilCertificate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilCertificate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Hash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PreviousHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PreviousHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Epoch", wireType)
				}
				x.Epoch = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Epoch |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedEntityType", wireType)
				}
				x.SignedEntityType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SignedEntityType |= SignedEntityType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Metadata == nil {
					x.Metadata = &CertificateMetadata{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Metadata); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtocolMessage", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProtocolMessage == nil {
					x.ProtocolMessage = &ProtocolMessage{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProtocolMessage); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SignedMessage", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SignedMessage = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AggregateVerificationKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.AggregateVerificationKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signature", wireType)
				}
				x.Signature = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Signature |= CertificateSignature(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_CertificateMetadata_5_list)(nil)

type _CertificateMetadata_5_list struct {
	list *[]*SignerWithStake
}

func (x *_CertificateMetadata_5_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_CertificateMetadata_5_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_CertificateMetadata_5_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SignerWithStake)
	(*x.list)[i] = concreteValue
}

func (x *_CertificateMetadata_5_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*SignerWithStake)
	*x.list = append(*x.list, concreteValue)
}

func (x *_CertificateMetadata_5_list) AppendMutable() protoreflect.Value {
	v := new(SignerWithStake)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CertificateMetadata_5_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_CertificateMetadata_5_list) NewElement() protoreflect.Value {
	v := new(SignerWithStake)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_CertificateMetadata_5_list) IsValid() bool {
	return x.list != nil
}

var (
	md_CertificateMetadata                     protoreflect.MessageDescriptor
	fd_CertificateMetadata_protocol_version    protoreflect.FieldDescriptor
	fd_CertificateMetadata_protocol_parameters protoreflect.FieldDescriptor
	fd_CertificateMetadata_initiatedAt         protoreflect.FieldDescriptor
	fd_CertificateMetadata_sealedAt            protoreflect.FieldDescriptor
	fd_CertificateMetadata_signers             protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_CertificateMetadata = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("CertificateMetadata")
	fd_CertificateMetadata_protocol_version = md_CertificateMetadata.Fields().ByName("protocol_version")
	fd_CertificateMetadata_protocol_parameters = md_CertificateMetadata.Fields().ByName("protocol_parameters")
	fd_CertificateMetadata_initiatedAt = md_CertificateMetadata.Fields().ByName("initiatedAt")
	fd_CertificateMetadata_sealedAt = md_CertificateMetadata.Fields().ByName("sealedAt")
	fd_CertificateMetadata_signers = md_CertificateMetadata.Fields().ByName("signers")
}

var _ protoreflect.Message = (*fastReflection_CertificateMetadata)(nil)

type fastReflection_CertificateMetadata CertificateMetadata

func (x *CertificateMetadata) ProtoReflect() protoreflect.Message {
	return (*fastReflection_CertificateMetadata)(x)
}

func (x *CertificateMetadata) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_CertificateMetadata_messageType fastReflection_CertificateMetadata_messageType
var _ protoreflect.MessageType = fastReflection_CertificateMetadata_messageType{}

type fastReflection_CertificateMetadata_messageType struct{}

func (x fastReflection_CertificateMetadata_messageType) Zero() protoreflect.Message {
	return (*fastReflection_CertificateMetadata)(nil)
}
func (x fastReflection_CertificateMetadata_messageType) New() protoreflect.Message {
	return new(fastReflection_CertificateMetadata)
}
func (x fastReflection_CertificateMetadata_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_CertificateMetadata
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_CertificateMetadata) Descriptor() protoreflect.MessageDescriptor {
	return md_CertificateMetadata
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_CertificateMetadata) Type() protoreflect.MessageType {
	return _fastReflection_CertificateMetadata_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_CertificateMetadata) New() protoreflect.Message {
	return new(fastReflection_CertificateMetadata)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_CertificateMetadata) Interface() protoreflect.ProtoMessage {
	return (*CertificateMetadata)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_CertificateMetadata) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProtocolVersion != "" {
		value := protoreflect.ValueOfString(x.ProtocolVersion)
		if !f(fd_CertificateMetadata_protocol_version, value) {
			return
		}
	}
	if x.ProtocolParameters != nil {
		value := protoreflect.ValueOfMessage(x.ProtocolParameters.ProtoReflect())
		if !f(fd_CertificateMetadata_protocol_parameters, value) {
			return
		}
	}
	if x.InitiatedAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.InitiatedAt)
		if !f(fd_CertificateMetadata_initiatedAt, value) {
			return
		}
	}
	if x.SealedAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.SealedAt)
		if !f(fd_CertificateMetadata_sealedAt, value) {
			return
		}
	}
	if len(x.Signers) != 0 {
		value := protoreflect.ValueOfList(&_CertificateMetadata_5_list{list: &x.Signers})
		if !f(fd_CertificateMetadata_signers, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_CertificateMetadata) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_version":
		return x.ProtocolVersion != ""
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_parameters":
		return x.ProtocolParameters != nil
	case "ibc.clients.mithril.v1.CertificateMetadata.initiatedAt":
		return x.InitiatedAt != uint64(0)
	case "ibc.clients.mithril.v1.CertificateMetadata.sealedAt":
		return x.SealedAt != uint64(0)
	case "ibc.clients.mithril.v1.CertificateMetadata.signers":
		return len(x.Signers) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CertificateMetadata"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CertificateMetadata does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CertificateMetadata) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_version":
		x.ProtocolVersion = ""
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_parameters":
		x.ProtocolParameters = nil
	case "ibc.clients.mithril.v1.CertificateMetadata.initiatedAt":
		x.InitiatedAt = uint64(0)
	case "ibc.clients.mithril.v1.CertificateMetadata.sealedAt":
		x.SealedAt = uint64(0)
	case "ibc.clients.mithril.v1.CertificateMetadata.signers":
		x.Signers = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CertificateMetadata"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CertificateMetadata does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_CertificateMetadata) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_version":
		value := x.ProtocolVersion
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_parameters":
		value := x.ProtocolParameters
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "ibc.clients.mithril.v1.CertificateMetadata.initiatedAt":
		value := x.InitiatedAt
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.CertificateMetadata.sealedAt":
		value := x.SealedAt
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.CertificateMetadata.signers":
		if len(x.Signers) == 0 {
			return protoreflect.ValueOfList(&_CertificateMetadata_5_list{})
		}
		listValue := &_CertificateMetadata_5_list{list: &x.Signers}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CertificateMetadata"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CertificateMetadata does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CertificateMetadata) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_version":
		x.ProtocolVersion = value.Interface().(string)
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_parameters":
		x.ProtocolParameters = value.Message().Interface().(*MithrilProtocolParameters)
	case "ibc.clients.mithril.v1.CertificateMetadata.initiatedAt":
		x.InitiatedAt = value.Uint()
	case "ibc.clients.mithril.v1.CertificateMetadata.sealedAt":
		x.SealedAt = value.Uint()
	case "ibc.clients.mithril.v1.CertificateMetadata.signers":
		lv := value.List()
		clv := lv.(*_CertificateMetadata_5_list)
		x.Signers = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CertificateMetadata"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CertificateMetadata does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CertificateMetadata) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_parameters":
		if x.ProtocolParameters == nil {
			x.ProtocolParameters = new(MithrilProtocolParameters)
		}
		return protoreflect.ValueOfMessage(x.ProtocolParameters.ProtoReflect())
	case "ibc.clients.mithril.v1.CertificateMetadata.signers":
		if x.Signers == nil {
			x.Signers = []*SignerWithStake{}
		}
		value := &_CertificateMetadata_5_list{list: &x.Signers}
		return protoreflect.ValueOfList(value)
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_version":
		panic(fmt.Errorf("field protocol_version of message ibc.clients.mithril.v1.CertificateMetadata is not mutable"))
	case "ibc.clients.mithril.v1.CertificateMetadata.initiatedAt":
		panic(fmt.Errorf("field initiatedAt of message ibc.clients.mithril.v1.CertificateMetadata is not mutable"))
	case "ibc.clients.mithril.v1.CertificateMetadata.sealedAt":
		panic(fmt.Errorf("field sealedAt of message ibc.clients.mithril.v1.CertificateMetadata is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CertificateMetadata"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CertificateMetadata does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_CertificateMetadata) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_version":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.CertificateMetadata.protocol_parameters":
		m := new(MithrilProtocolParameters)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "ibc.clients.mithril.v1.CertificateMetadata.initiatedAt":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.CertificateMetadata.sealedAt":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.CertificateMetadata.signers":
		list := []*SignerWithStake{}
		return protoreflect.ValueOfList(&_CertificateMetadata_5_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.CertificateMetadata"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.CertificateMetadata does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_CertificateMetadata) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.CertificateMetadata", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_CertificateMetadata) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_CertificateMetadata) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_CertificateMetadata) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_CertificateMetadata) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*CertificateMetadata)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ProtocolVersion)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ProtocolParameters != nil {
			l = options.Size(x.ProtocolParameters)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.InitiatedAt != 0 {
			n += 1 + runtime.Sov(uint64(x.InitiatedAt))
		}
		if x.SealedAt != 0 {
			n += 1 + runtime.Sov(uint64(x.SealedAt))
		}
		if len(x.Signers) > 0 {
			for _, e := range x.Signers {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*CertificateMetadata)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Signers) > 0 {
			for iNdEx := len(x.Signers) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.Signers[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0x2a
			}
		}
		if x.SealedAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.SealedAt))
			i--
			dAtA[i] = 0x20
		}
		if x.InitiatedAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.InitiatedAt))
			i--
			dAtA[i] = 0x18
		}
		if x.ProtocolParameters != nil {
			encoded, err := options.Marshal(x.ProtocolParameters)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ProtocolVersion) > 0 {
			i -= len(x.ProtocolVersion)
			copy(dAtA[i:], x.ProtocolVersion)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProtocolVersion)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*CertificateMetadata)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CertificateMetadata: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: CertificateMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtocolVersion", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProtocolVersion = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtocolParameters", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.ProtocolParameters == nil {
					x.ProtocolParameters = &MithrilProtocolParameters{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.ProtocolParameters); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field InitiatedAt", wireType)
				}
				x.InitiatedAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.InitiatedAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SealedAt", wireType)
				}
				x.SealedAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.SealedAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Signers", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Signers = append(x.Signers, &SignerWithStake{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Signers[len(x.Signers)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_SignerWithStake          protoreflect.MessageDescriptor
	fd_SignerWithStake_party_id protoreflect.FieldDescriptor
	fd_SignerWithStake_stake    protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_SignerWithStake = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("SignerWithStake")
	fd_SignerWithStake_party_id = md_SignerWithStake.Fields().ByName("party_id")
	fd_SignerWithStake_stake = md_SignerWithStake.Fields().ByName("stake")
}

var _ protoreflect.Message = (*fastReflection_SignerWithStake)(nil)

type fastReflection_SignerWithStake SignerWithStake

func (x *SignerWithStake) ProtoReflect() protoreflect.Message {
	return (*fastReflection_SignerWithStake)(x)
}

func (x *SignerWithStake) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_SignerWithStake_messageType fastReflection_SignerWithStake_messageType
var _ protoreflect.MessageType = fastReflection_SignerWithStake_messageType{}

type fastReflection_SignerWithStake_messageType struct{}

func (x fastReflection_SignerWithStake_messageType) Zero() protoreflect.Message {
	return (*fastReflection_SignerWithStake)(nil)
}
func (x fastReflection_SignerWithStake_messageType) New() protoreflect.Message {
	return new(fastReflection_SignerWithStake)
}
func (x fastReflection_SignerWithStake_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_SignerWithStake
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_SignerWithStake) Descriptor() protoreflect.MessageDescriptor {
	return md_SignerWithStake
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_SignerWithStake) Type() protoreflect.MessageType {
	return _fastReflection_SignerWithStake_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_SignerWithStake) New() protoreflect.Message {
	return new(fastReflection_SignerWithStake)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_SignerWithStake) Interface() protoreflect.ProtoMessage {
	return (*SignerWithStake)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_SignerWithStake) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PartyId != "" {
		value := protoreflect.ValueOfString(x.PartyId)
		if !f(fd_SignerWithStake_party_id, value) {
			return
		}
	}
	if x.Stake != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Stake)
		if !f(fd_SignerWithStake_stake, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_SignerWithStake) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.SignerWithStake.party_id":
		return x.PartyId != ""
	case "ibc.clients.mithril.v1.SignerWithStake.stake":
		return x.Stake != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.SignerWithStake"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.SignerWithStake does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignerWithStake) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.SignerWithStake.party_id":
		x.PartyId = ""
	case "ibc.clients.mithril.v1.SignerWithStake.stake":
		x.Stake = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.SignerWithStake"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.SignerWithStake does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_SignerWithStake) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.SignerWithStake.party_id":
		value := x.PartyId
		return protoreflect.ValueOfString(value)
	case "ibc.clients.mithril.v1.SignerWithStake.stake":
		value := x.Stake
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.SignerWithStake"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.SignerWithStake does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignerWithStake) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.SignerWithStake.party_id":
		x.PartyId = value.Interface().(string)
	case "ibc.clients.mithril.v1.SignerWithStake.stake":
		x.Stake = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.SignerWithStake"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.SignerWithStake does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignerWithStake) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.SignerWithStake.party_id":
		panic(fmt.Errorf("field party_id of message ibc.clients.mithril.v1.SignerWithStake is not mutable"))
	case "ibc.clients.mithril.v1.SignerWithStake.stake":
		panic(fmt.Errorf("field stake of message ibc.clients.mithril.v1.SignerWithStake is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.SignerWithStake"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.SignerWithStake does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_SignerWithStake) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.SignerWithStake.party_id":
		return protoreflect.ValueOfString("")
	case "ibc.clients.mithril.v1.SignerWithStake.stake":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.SignerWithStake"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.SignerWithStake does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_SignerWithStake) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.SignerWithStake", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_SignerWithStake) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_SignerWithStake) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_SignerWithStake) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_SignerWithStake) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*SignerWithStake)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.PartyId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Stake != 0 {
			n += 1 + runtime.Sov(uint64(x.Stake))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*SignerWithStake)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Stake != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Stake))
			i--
			dAtA[i] = 0x10
		}
		if len(x.PartyId) > 0 {
			i -= len(x.PartyId)
			copy(dAtA[i:], x.PartyId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.PartyId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*SignerWithStake)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SignerWithStake: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: SignerWithStake: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PartyId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.PartyId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Stake", wireType)
				}
				x.Stake = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Stake |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_ProtocolMessage_1_list)(nil)

type _ProtocolMessage_1_list struct {
	list *[]*MessagePart
}

func (x *_ProtocolMessage_1_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_ProtocolMessage_1_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfMessage((*x.list)[i].ProtoReflect())
}

func (x *_ProtocolMessage_1_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MessagePart)
	(*x.list)[i] = concreteValue
}

func (x *_ProtocolMessage_1_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.Message()
	concreteValue := valueUnwrapped.Interface().(*MessagePart)
	*x.list = append(*x.list, concreteValue)
}

func (x *_ProtocolMessage_1_list) AppendMutable() protoreflect.Value {
	v := new(MessagePart)
	*x.list = append(*x.list, v)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ProtocolMessage_1_list) Truncate(n int) {
	for i := n; i < len(*x.list); i++ {
		(*x.list)[i] = nil
	}
	*x.list = (*x.list)[:n]
}

func (x *_ProtocolMessage_1_list) NewElement() protoreflect.Value {
	v := new(MessagePart)
	return protoreflect.ValueOfMessage(v.ProtoReflect())
}

func (x *_ProtocolMessage_1_list) IsValid() bool {
	return x.list != nil
}

var (
	md_ProtocolMessage               protoreflect.MessageDescriptor
	fd_ProtocolMessage_message_parts protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_ProtocolMessage = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("ProtocolMessage")
	fd_ProtocolMessage_message_parts = md_ProtocolMessage.Fields().ByName("message_parts")
}

var _ protoreflect.Message = (*fastReflection_ProtocolMessage)(nil)

type fastReflection_ProtocolMessage ProtocolMessage

func (x *ProtocolMessage) ProtoReflect() protoreflect.Message {
	return (*fastReflection_ProtocolMessage)(x)
}

func (x *ProtocolMessage) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_ProtocolMessage_messageType fastReflection_ProtocolMessage_messageType
var _ protoreflect.MessageType = fastReflection_ProtocolMessage_messageType{}

type fastReflection_ProtocolMessage_messageType struct{}

func (x fastReflection_ProtocolMessage_messageType) Zero() protoreflect.Message {
	return (*fastReflection_ProtocolMessage)(nil)
}
func (x fastReflection_ProtocolMessage_messageType) New() protoreflect.Message {
	return new(fastReflection_ProtocolMessage)
}
func (x fastReflection_ProtocolMessage_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_ProtocolMessage
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_ProtocolMessage) Descriptor() protoreflect.MessageDescriptor {
	return md_ProtocolMessage
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_ProtocolMessage) Type() protoreflect.MessageType {
	return _fastReflection_ProtocolMessage_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_ProtocolMessage) New() protoreflect.Message {
	return new(fastReflection_ProtocolMessage)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_ProtocolMessage) Interface() protoreflect.ProtoMessage {
	return (*ProtocolMessage)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_ProtocolMessage) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if len(x.MessageParts) != 0 {
		value := protoreflect.ValueOfList(&_ProtocolMessage_1_list{list: &x.MessageParts})
		if !f(fd_ProtocolMessage_message_parts, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_ProtocolMessage) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ProtocolMessage.message_parts":
		return len(x.MessageParts) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ProtocolMessage"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ProtocolMessage does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProtocolMessage) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ProtocolMessage.message_parts":
		x.MessageParts = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ProtocolMessage"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ProtocolMessage does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_ProtocolMessage) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.ProtocolMessage.message_parts":
		if len(x.MessageParts) == 0 {
			return protoreflect.ValueOfList(&_ProtocolMessage_1_list{})
		}
		listValue := &_ProtocolMessage_1_list{list: &x.MessageParts}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ProtocolMessage"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ProtocolMessage does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProtocolMessage) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ProtocolMessage.message_parts":
		lv := value.List()
		clv := lv.(*_ProtocolMessage_1_list)
		x.MessageParts = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ProtocolMessage"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ProtocolMessage does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProtocolMessage) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ProtocolMessage.message_parts":
		if x.MessageParts == nil {
			x.MessageParts = []*MessagePart{}
		}
		value := &_ProtocolMessage_1_list{list: &x.MessageParts}
		return protoreflect.ValueOfList(value)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ProtocolMessage"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ProtocolMessage does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_ProtocolMessage) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.ProtocolMessage.message_parts":
		list := []*MessagePart{}
		return protoreflect.ValueOfList(&_ProtocolMessage_1_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.ProtocolMessage"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.ProtocolMessage does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_ProtocolMessage) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.ProtocolMessage", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_ProtocolMessage) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_ProtocolMessage) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_ProtocolMessage) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_ProtocolMessage) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*ProtocolMessage)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if len(x.MessageParts) > 0 {
			for _, e := range x.MessageParts {
				l = options.Size(e)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*ProtocolMessage)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MessageParts) > 0 {
			for iNdEx := len(x.MessageParts) - 1; iNdEx >= 0; iNdEx-- {
				encoded, err := options.Marshal(x.MessageParts[iNdEx])
				if err != nil {
					return protoiface.MarshalOutput{
						NoUnkeyedLiterals: input.NoUnkeyedLiterals,
						Buf:               input.Buf,
					}, err
				}
				i -= len(encoded)
				copy(dAtA[i:], encoded)
				i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
				i--
				dAtA[i] = 0xa
			}
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*ProtocolMessage)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ProtocolMessage: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: ProtocolMessage: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MessageParts", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MessageParts = append(x.MessageParts, &MessagePart{})
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.MessageParts[len(x.MessageParts)-1]); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MessagePart                             protoreflect.MessageDescriptor
	fd_MessagePart_protocol_message_part_key   protoreflect.FieldDescriptor
	fd_MessagePart_protocol_message_part_value protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_MessagePart = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("MessagePart")
	fd_MessagePart_protocol_message_part_key = md_MessagePart.Fields().ByName("protocol_message_part_key")
	fd_MessagePart_protocol_message_part_value = md_MessagePart.Fields().ByName("protocol_message_part_value")
}

var _ protoreflect.Message = (*fastReflection_MessagePart)(nil)

type fastReflection_MessagePart MessagePart

func (x *MessagePart) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MessagePart)(x)
}

func (x *MessagePart) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MessagePart_messageType fastReflection_MessagePart_messageType
var _ protoreflect.MessageType = fastReflection_MessagePart_messageType{}

type fastReflection_MessagePart_messageType struct{}

func (x fastReflection_MessagePart_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MessagePart)(nil)
}
func (x fastReflection_MessagePart_messageType) New() protoreflect.Message {
	return new(fastReflection_MessagePart)
}
func (x fastReflection_MessagePart_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MessagePart
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MessagePart) Descriptor() protoreflect.MessageDescriptor {
	return md_MessagePart
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MessagePart) Type() protoreflect.MessageType {
	return _fastReflection_MessagePart_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MessagePart) New() protoreflect.Message {
	return new(fastReflection_MessagePart)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MessagePart) Interface() protoreflect.ProtoMessage {
	return (*MessagePart)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MessagePart) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ProtocolMessagePartKey != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.ProtocolMessagePartKey))
		if !f(fd_MessagePart_protocol_message_part_key, value) {
			return
		}
	}
	if x.ProtocolMessagePartValue != "" {
		value := protoreflect.ValueOfString(x.ProtocolMessagePartValue)
		if !f(fd_MessagePart_protocol_message_part_value, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MessagePart) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_key":
		return x.ProtocolMessagePartKey != 0
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_value":
		return x.ProtocolMessagePartValue != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MessagePart"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MessagePart does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessagePart) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_key":
		x.ProtocolMessagePartKey = 0
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_value":
		x.ProtocolMessagePartValue = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MessagePart"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MessagePart does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MessagePart) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_key":
		value := x.ProtocolMessagePartKey
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_value":
		value := x.ProtocolMessagePartValue
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MessagePart"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MessagePart does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessagePart) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_key":
		x.ProtocolMessagePartKey = (ProtocolMessagePartKey)(value.Enum())
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_value":
		x.ProtocolMessagePartValue = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MessagePart"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MessagePart does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessagePart) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_key":
		panic(fmt.Errorf("field protocol_message_part_key of message ibc.clients.mithril.v1.MessagePart is not mutable"))
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_value":
		panic(fmt.Errorf("field protocol_message_part_value of message ibc.clients.mithril.v1.MessagePart is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MessagePart"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MessagePart does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MessagePart) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_key":
		return protoreflect.ValueOfEnum(0)
	case "ibc.clients.mithril.v1.MessagePart.protocol_message_part_value":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MessagePart"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MessagePart does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MessagePart) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.MessagePart", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MessagePart) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MessagePart) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MessagePart) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MessagePart) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MessagePart)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.ProtocolMessagePartKey != 0 {
			n += 1 + runtime.Sov(uint64(x.ProtocolMessagePartKey))
		}
		l = len(x.ProtocolMessagePartValue)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MessagePart)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ProtocolMessagePartValue) > 0 {
			i -= len(x.ProtocolMessagePartValue)
			copy(dAtA[i:], x.ProtocolMessagePartValue)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ProtocolMessagePartValue)))
			i--
			dAtA[i] = 0x12
		}
		if x.ProtocolMessagePartKey != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ProtocolMessagePartKey))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MessagePart)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MessagePart: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MessagePart: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtocolMessagePartKey", wireType)
				}
				x.ProtocolMessagePartKey = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ProtocolMessagePartKey |= ProtocolMessagePartKey(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ProtocolMessagePartValue", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ProtocolMessagePartValue = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MithrilProtocolParameters       protoreflect.MessageDescriptor
	fd_MithrilProtocolParameters_k     protoreflect.FieldDescriptor
	fd_MithrilProtocolParameters_m     protoreflect.FieldDescriptor
	fd_MithrilProtocolParameters_phi_f protoreflect.FieldDescriptor
)

func init() {
	file_ibc_clients_mithril_v1_mithril_proto_init()
	md_MithrilProtocolParameters = File_ibc_clients_mithril_v1_mithril_proto.Messages().ByName("MithrilProtocolParameters")
	fd_MithrilProtocolParameters_k = md_MithrilProtocolParameters.Fields().ByName("k")
	fd_MithrilProtocolParameters_m = md_MithrilProtocolParameters.Fields().ByName("m")
	fd_MithrilProtocolParameters_phi_f = md_MithrilProtocolParameters.Fields().ByName("phi_f")
}

var _ protoreflect.Message = (*fastReflection_MithrilProtocolParameters)(nil)

type fastReflection_MithrilProtocolParameters MithrilProtocolParameters

func (x *MithrilProtocolParameters) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MithrilProtocolParameters)(x)
}

func (x *MithrilProtocolParameters) slowProtoReflect() protoreflect.Message {
	mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MithrilProtocolParameters_messageType fastReflection_MithrilProtocolParameters_messageType
var _ protoreflect.MessageType = fastReflection_MithrilProtocolParameters_messageType{}

type fastReflection_MithrilProtocolParameters_messageType struct{}

func (x fastReflection_MithrilProtocolParameters_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MithrilProtocolParameters)(nil)
}
func (x fastReflection_MithrilProtocolParameters_messageType) New() protoreflect.Message {
	return new(fastReflection_MithrilProtocolParameters)
}
func (x fastReflection_MithrilProtocolParameters_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilProtocolParameters
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MithrilProtocolParameters) Descriptor() protoreflect.MessageDescriptor {
	return md_MithrilProtocolParameters
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MithrilProtocolParameters) Type() protoreflect.MessageType {
	return _fastReflection_MithrilProtocolParameters_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MithrilProtocolParameters) New() protoreflect.Message {
	return new(fastReflection_MithrilProtocolParameters)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MithrilProtocolParameters) Interface() protoreflect.ProtoMessage {
	return (*MithrilProtocolParameters)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MithrilProtocolParameters) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.K != uint64(0) {
		value := protoreflect.ValueOfUint64(x.K)
		if !f(fd_MithrilProtocolParameters_k, value) {
			return
		}
	}
	if x.M != uint64(0) {
		value := protoreflect.ValueOfUint64(x.M)
		if !f(fd_MithrilProtocolParameters_m, value) {
			return
		}
	}
	if x.PhiF != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PhiF)
		if !f(fd_MithrilProtocolParameters_phi_f, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MithrilProtocolParameters) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.k":
		return x.K != uint64(0)
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.m":
		return x.M != uint64(0)
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.phi_f":
		return x.PhiF != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilProtocolParameters"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilProtocolParameters does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilProtocolParameters) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.k":
		x.K = uint64(0)
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.m":
		x.M = uint64(0)
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.phi_f":
		x.PhiF = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilProtocolParameters"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilProtocolParameters does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MithrilProtocolParameters) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.k":
		value := x.K
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.m":
		value := x.M
		return protoreflect.ValueOfUint64(value)
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.phi_f":
		value := x.PhiF
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilProtocolParameters"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilProtocolParameters does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilProtocolParameters) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.k":
		x.K = value.Uint()
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.m":
		x.M = value.Uint()
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.phi_f":
		x.PhiF = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilProtocolParameters"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilProtocolParameters does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilProtocolParameters) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.k":
		panic(fmt.Errorf("field k of message ibc.clients.mithril.v1.MithrilProtocolParameters is not mutable"))
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.m":
		panic(fmt.Errorf("field m of message ibc.clients.mithril.v1.MithrilProtocolParameters is not mutable"))
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.phi_f":
		panic(fmt.Errorf("field phi_f of message ibc.clients.mithril.v1.MithrilProtocolParameters is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilProtocolParameters"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilProtocolParameters does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MithrilProtocolParameters) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.k":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.m":
		return protoreflect.ValueOfUint64(uint64(0))
	case "ibc.clients.mithril.v1.MithrilProtocolParameters.phi_f":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: ibc.clients.mithril.v1.MithrilProtocolParameters"))
		}
		panic(fmt.Errorf("message ibc.clients.mithril.v1.MithrilProtocolParameters does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MithrilProtocolParameters) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in ibc.clients.mithril.v1.MithrilProtocolParameters", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MithrilProtocolParameters) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MithrilProtocolParameters) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MithrilProtocolParameters) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MithrilProtocolParameters) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MithrilProtocolParameters)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.K != 0 {
			n += 1 + runtime.Sov(uint64(x.K))
		}
		if x.M != 0 {
			n += 1 + runtime.Sov(uint64(x.M))
		}
		if x.PhiF != 0 {
			n += 1 + runtime.Sov(uint64(x.PhiF))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MithrilProtocolParameters)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.PhiF != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PhiF))
			i--
			dAtA[i] = 0x18
		}
		if x.M != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.M))
			i--
			dAtA[i] = 0x10
		}
		if x.K != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.K))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MithrilProtocolParameters)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilProtocolParameters: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MithrilProtocolParameters: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field K", wireType)
				}
				x.K = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.K |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field M", wireType)
				}
				x.M = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.M |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PhiF", wireType)
				}
				x.PhiF = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PhiF |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: ibc/clients/mithril/v1/mithril.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtocolMessagePartKey int32

const (
	ProtocolMessagePartKey_SNAPSHOT_DIGEST                  ProtocolMessagePartKey = 0
	ProtocolMessagePartKey_CARDANO_TRANSACTIONS_MERKLE_ROOT ProtocolMessagePartKey = 1
	ProtocolMessagePartKey_NEXT_AGGREGATE_VERIFICATION_KEY  ProtocolMessagePartKey = 2
	ProtocolMessagePartKey_LATEST_IMMUTABLE_FILE_NUMBER     ProtocolMessagePartKey = 3
)

// Enum value maps for ProtocolMessagePartKey.
var (
	ProtocolMessagePartKey_name = map[int32]string{
		0: "SNAPSHOT_DIGEST",
		1: "CARDANO_TRANSACTIONS_MERKLE_ROOT",
		2: "NEXT_AGGREGATE_VERIFICATION_KEY",
		3: "LATEST_IMMUTABLE_FILE_NUMBER",
	}
	ProtocolMessagePartKey_value = map[string]int32{
		"SNAPSHOT_DIGEST":                  0,
		"CARDANO_TRANSACTIONS_MERKLE_ROOT": 1,
		"NEXT_AGGREGATE_VERIFICATION_KEY":  2,
		"LATEST_IMMUTABLE_FILE_NUMBER":     3,
	}
)

func (x ProtocolMessagePartKey) Enum() *ProtocolMessagePartKey {
	p := new(ProtocolMessagePartKey)
	*p = x
	return p
}

func (x ProtocolMessagePartKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtocolMessagePartKey) Descriptor() protoreflect.EnumDescriptor {
	return file_ibc_clients_mithril_v1_mithril_proto_enumTypes[0].Descriptor()
}

func (ProtocolMessagePartKey) Type() protoreflect.EnumType {
	return &file_ibc_clients_mithril_v1_mithril_proto_enumTypes[0]
}

func (x ProtocolMessagePartKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtocolMessagePartKey.Descriptor instead.
func (ProtocolMessagePartKey) EnumDescriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{0}
}

type SignedEntityType int32

const (
	SignedEntityType_MITHRIL_STAKE_DISTRIBUTION SignedEntityType = 0
	SignedEntityType_CARDANO_TRANSACTIONS       SignedEntityType = 1
)

// Enum value maps for SignedEntityType.
var (
	SignedEntityType_name = map[int32]string{
		0: "MITHRIL_STAKE_DISTRIBUTION",
		1: "CARDANO_TRANSACTIONS",
	}
	SignedEntityType_value = map[string]int32{
		"MITHRIL_STAKE_DISTRIBUTION": 0,
		"CARDANO_TRANSACTIONS":       1,
	}
)

func (x SignedEntityType) Enum() *SignedEntityType {
	p := new(SignedEntityType)
	*p = x
	return p
}

func (x SignedEntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignedEntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_ibc_clients_mithril_v1_mithril_proto_enumTypes[1].Descriptor()
}

func (SignedEntityType) Type() protoreflect.EnumType {
	return &file_ibc_clients_mithril_v1_mithril_proto_enumTypes[1]
}

func (x SignedEntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignedEntityType.Descriptor instead.
func (SignedEntityType) EnumDescriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{1}
}

type CertificateSignature int32

const (
	CertificateSignature_GENESIS_SIGNATURE CertificateSignature = 0
	CertificateSignature_MULTI_SIGNATURE   CertificateSignature = 1
)

// Enum value maps for CertificateSignature.
var (
	CertificateSignature_name = map[int32]string{
		0: "GENESIS_SIGNATURE",
		1: "MULTI_SIGNATURE",
	}
	CertificateSignature_value = map[string]int32{
		"GENESIS_SIGNATURE": 0,
		"MULTI_SIGNATURE":   1,
	}
)

func (x CertificateSignature) Enum() *CertificateSignature {
	p := new(CertificateSignature)
	*p = x
	return p
}

func (x CertificateSignature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CertificateSignature) Descriptor() protoreflect.EnumDescriptor {
	return file_ibc_clients_mithril_v1_mithril_proto_enumTypes[2].Descriptor()
}

func (CertificateSignature) Type() protoreflect.EnumType {
	return &file_ibc_clients_mithril_v1_mithril_proto_enumTypes[2]
}

func (x CertificateSignature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CertificateSignature.Descriptor instead.
func (CertificateSignature) EnumDescriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{2}
}

type Height struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the immutable file number
	MithrilHeight uint64 `protobuf:"varint,1,opt,name=mithril_height,json=mithrilHeight,proto3" json:"mithril_height,omitempty"`
}

func (x *Height) Reset() {
	*x = Height{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Height) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Height) ProtoMessage() {}

// Deprecated: Use Height.ProtoReflect.Descriptor instead.
func (*Height) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{0}
}

func (x *Height) GetMithrilHeight() uint64 {
	if x != nil {
		return x.MithrilHeight
	}
	return 0
}

type ClientState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Chain id
	ChainId string `protobuf:"bytes,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// Latest height the client was updated to
	LatestHeight *Height `protobuf:"bytes,2,opt,name=latest_height,json=latestHeight,proto3" json:"latest_height,omitempty"`
	// Block height when the client was frozen due to a misbehaviour
	FrozenHeight *Height `protobuf:"bytes,3,opt,name=frozen_height,json=frozenHeight,proto3" json:"frozen_height,omitempty"`
	// Epoch number of current chain state
	CurrentEpoch       uint64                     `protobuf:"varint,4,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
	TrustingPeriod     *durationpb.Duration       `protobuf:"bytes,5,opt,name=trusting_period,json=trustingPeriod,proto3" json:"trusting_period,omitempty"`
	ProtocolParameters *MithrilProtocolParameters `protobuf:"bytes,6,opt,name=protocol_parameters,json=protocolParameters,proto3" json:"protocol_parameters,omitempty"`
	// Path at which next upgraded client will be committed.
	UpgradePath []string `protobuf:"bytes,7,rep,name=upgrade_path,json=upgradePath,proto3" json:"upgrade_path,omitempty"`
}

func (x *ClientState) Reset() {
	*x = ClientState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientState) ProtoMessage() {}

// Deprecated: Use ClientState.ProtoReflect.Descriptor instead.
func (*ClientState) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{1}
}

func (x *ClientState) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *ClientState) GetLatestHeight() *Height {
	if x != nil {
		return x.LatestHeight
	}
	return nil
}

func (x *ClientState) GetFrozenHeight() *Height {
	if x != nil {
		return x.FrozenHeight
	}
	return nil
}

func (x *ClientState) GetCurrentEpoch() uint64 {
	if x != nil {
		return x.CurrentEpoch
	}
	return 0
}

func (x *ClientState) GetTrustingPeriod() *durationpb.Duration {
	if x != nil {
		return x.TrustingPeriod
	}
	return nil
}

func (x *ClientState) GetProtocolParameters() *MithrilProtocolParameters {
	if x != nil {
		return x.ProtocolParameters
	}
	return nil
}

func (x *ClientState) GetUpgradePath() []string {
	if x != nil {
		return x.UpgradePath
	}
	return nil
}

type ConsensusState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// First certificate hash of latest epoch of mithril stake distribution
	FcHashLatestEpochMsd string `protobuf:"bytes,2,opt,name=fc_hash_latest_epoch_msd,json=fcHashLatestEpochMsd,proto3" json:"fc_hash_latest_epoch_msd,omitempty"`
	// Latest certificate hash of mithril stake distribution
	LatestCertHashMsd string `protobuf:"bytes,3,opt,name=latest_cert_hash_msd,json=latestCertHashMsd,proto3" json:"latest_cert_hash_msd,omitempty"`
	// First certificate hash of latest epoch of transaction snapshot
	FcHashLatestEpochTs string `protobuf:"bytes,4,opt,name=fc_hash_latest_epoch_ts,json=fcHashLatestEpochTs,proto3" json:"fc_hash_latest_epoch_ts,omitempty"`
	// Latest certificate hash of transaction snapshot
	LatestCertHashTs string `protobuf:"bytes,5,opt,name=latest_cert_hash_ts,json=latestCertHashTs,proto3" json:"latest_cert_hash_ts,omitempty"`
}

func (x *ConsensusState) Reset() {
	*x = ConsensusState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusState) ProtoMessage() {}

// Deprecated: Use ConsensusState.ProtoReflect.Descriptor instead.
func (*ConsensusState) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{2}
}

func (x *ConsensusState) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ConsensusState) GetFcHashLatestEpochMsd() string {
	if x != nil {
		return x.FcHashLatestEpochMsd
	}
	return ""
}

func (x *ConsensusState) GetLatestCertHashMsd() string {
	if x != nil {
		return x.LatestCertHashMsd
	}
	return ""
}

func (x *ConsensusState) GetFcHashLatestEpochTs() string {
	if x != nil {
		return x.FcHashLatestEpochTs
	}
	return ""
}

func (x *ConsensusState) GetLatestCertHashTs() string {
	if x != nil {
		return x.LatestCertHashTs
	}
	return ""
}

type Misbehaviour struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ClientID is deprecated
	//
	// Deprecated: Do not use.
	ClientId        string         `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	MithrilHeader_1 *MithrilHeader `protobuf:"bytes,2,opt,name=mithril_header_1,json=mithrilHeader1,proto3" json:"mithril_header_1,omitempty"`
	MithrilHeader_2 *MithrilHeader `protobuf:"bytes,3,opt,name=mithril_header_2,json=mithrilHeader2,proto3" json:"mithril_header_2,omitempty"`
}

func (x *Misbehaviour) Reset() {
	*x = Misbehaviour{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Misbehaviour) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Misbehaviour) ProtoMessage() {}

// Deprecated: Use Misbehaviour.ProtoReflect.Descriptor instead.
func (*Misbehaviour) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{3}
}

// Deprecated: Do not use.
func (x *Misbehaviour) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Misbehaviour) GetMithrilHeader_1() *MithrilHeader {
	if x != nil {
		return x.MithrilHeader_1
	}
	return nil
}

func (x *Misbehaviour) GetMithrilHeader_2() *MithrilHeader {
	if x != nil {
		return x.MithrilHeader_2
	}
	return nil
}

type MithrilHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MithrilStakeDistribution            *MithrilStakeDistribution   `protobuf:"bytes,1,opt,name=mithril_stake_distribution,json=mithrilStakeDistribution,proto3" json:"mithril_stake_distribution,omitempty"`
	MithrilStakeDistributionCertificate *MithrilCertificate         `protobuf:"bytes,2,opt,name=mithril_stake_distribution_certificate,json=mithrilStakeDistributionCertificate,proto3" json:"mithril_stake_distribution_certificate,omitempty"`
	TransactionSnapshot                 *CardanoTransactionSnapshot `protobuf:"bytes,3,opt,name=transaction_snapshot,json=transactionSnapshot,proto3" json:"transaction_snapshot,omitempty"`
	TransactionSnapshotCertificate      *MithrilCertificate         `protobuf:"bytes,4,opt,name=transaction_snapshot_certificate,json=transactionSnapshotCertificate,proto3" json:"transaction_snapshot_certificate,omitempty"`
}

func (x *MithrilHeader) Reset() {
	*x = MithrilHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MithrilHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MithrilHeader) ProtoMessage() {}

// Deprecated: Use MithrilHeader.ProtoReflect.Descriptor instead.
func (*MithrilHeader) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{4}
}

func (x *MithrilHeader) GetMithrilStakeDistribution() *MithrilStakeDistribution {
	if x != nil {
		return x.MithrilStakeDistribution
	}
	return nil
}

func (x *MithrilHeader) GetMithrilStakeDistributionCertificate() *MithrilCertificate {
	if x != nil {
		return x.MithrilStakeDistributionCertificate
	}
	return nil
}

func (x *MithrilHeader) GetTransactionSnapshot() *CardanoTransactionSnapshot {
	if x != nil {
		return x.TransactionSnapshot
	}
	return nil
}

func (x *MithrilHeader) GetTransactionSnapshotCertificate() *MithrilCertificate {
	if x != nil {
		return x.TransactionSnapshotCertificate
	}
	return nil
}

type MithrilStakeDistribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch             uint64                     `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	SignersWithStake  []*SignerWithStake         `protobuf:"bytes,2,rep,name=signers_with_stake,json=signersWithStake,proto3" json:"signers_with_stake,omitempty"`
	Hash              string                     `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	CertificateHash   string                     `protobuf:"bytes,4,opt,name=certificate_hash,json=certificateHash,proto3" json:"certificate_hash,omitempty"`
	CreatedAt         uint64                     `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ProtocolParameter *MithrilProtocolParameters `protobuf:"bytes,6,opt,name=protocol_parameter,json=protocolParameter,proto3" json:"protocol_parameter,omitempty"`
}

func (x *MithrilStakeDistribution) Reset() {
	*x = MithrilStakeDistribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MithrilStakeDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MithrilStakeDistribution) ProtoMessage() {}

// Deprecated: Use MithrilStakeDistribution.ProtoReflect.Descriptor instead.
func (*MithrilStakeDistribution) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{5}
}

func (x *MithrilStakeDistribution) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *MithrilStakeDistribution) GetSignersWithStake() []*SignerWithStake {
	if x != nil {
		return x.SignersWithStake
	}
	return nil
}

func (x *MithrilStakeDistribution) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *MithrilStakeDistribution) GetCertificateHash() string {
	if x != nil {
		return x.CertificateHash
	}
	return ""
}

func (x *MithrilStakeDistribution) GetCreatedAt() uint64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MithrilStakeDistribution) GetProtocolParameter() *MithrilProtocolParameters {
	if x != nil {
		return x.ProtocolParameter
	}
	return nil
}

type CardanoTransactionSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotHash    string  `protobuf:"bytes,1,opt,name=snapshot_hash,json=snapshotHash,proto3" json:"snapshot_hash,omitempty"`
	MerkleRoot      string  `protobuf:"bytes,2,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	CertificateHash string  `protobuf:"bytes,3,opt,name=certificate_hash,json=certificateHash,proto3" json:"certificate_hash,omitempty"`
	Epoch           uint64  `protobuf:"varint,4,opt,name=epoch,proto3" json:"epoch,omitempty"`
	Height          *Height `protobuf:"bytes,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *CardanoTransactionSnapshot) Reset() {
	*x = CardanoTransactionSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardanoTransactionSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardanoTransactionSnapshot) ProtoMessage() {}

// Deprecated: Use CardanoTransactionSnapshot.ProtoReflect.Descriptor instead.
func (*CardanoTransactionSnapshot) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{6}
}

func (x *CardanoTransactionSnapshot) GetSnapshotHash() string {
	if x != nil {
		return x.SnapshotHash
	}
	return ""
}

func (x *CardanoTransactionSnapshot) GetMerkleRoot() string {
	if x != nil {
		return x.MerkleRoot
	}
	return ""
}

func (x *CardanoTransactionSnapshot) GetCertificateHash() string {
	if x != nil {
		return x.CertificateHash
	}
	return ""
}

func (x *CardanoTransactionSnapshot) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *CardanoTransactionSnapshot) GetHeight() *Height {
	if x != nil {
		return x.Height
	}
	return nil
}

type MithrilCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash                     string               `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	PreviousHash             string               `protobuf:"bytes,2,opt,name=previous_hash,json=previousHash,proto3" json:"previous_hash,omitempty"`
	Epoch                    uint64               `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`
	SignedEntityType         SignedEntityType     `protobuf:"varint,4,opt,name=signed_entity_type,json=signedEntityType,proto3,enum=ibc.clients.mithril.v1.SignedEntityType" json:"signed_entity_type,omitempty"`
	Metadata                 *CertificateMetadata `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	ProtocolMessage          *ProtocolMessage     `protobuf:"bytes,6,opt,name=protocol_message,json=protocolMessage,proto3" json:"protocol_message,omitempty"`
	SignedMessage            string               `protobuf:"bytes,7,opt,name=signed_message,json=signedMessage,proto3" json:"signed_message,omitempty"`
	AggregateVerificationKey string               `protobuf:"bytes,8,opt,name=aggregate_verification_key,json=aggregateVerificationKey,proto3" json:"aggregate_verification_key,omitempty"`
	Signature                CertificateSignature `protobuf:"varint,9,opt,name=signature,proto3,enum=ibc.clients.mithril.v1.CertificateSignature" json:"signature,omitempty"`
}

func (x *MithrilCertificate) Reset() {
	*x = MithrilCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MithrilCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MithrilCertificate) ProtoMessage() {}

// Deprecated: Use MithrilCertificate.ProtoReflect.Descriptor instead.
func (*MithrilCertificate) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{7}
}

func (x *MithrilCertificate) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *MithrilCertificate) GetPreviousHash() string {
	if x != nil {
		return x.PreviousHash
	}
	return ""
}

func (x *MithrilCertificate) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *MithrilCertificate) GetSignedEntityType() SignedEntityType {
	if x != nil {
		return x.SignedEntityType
	}
	return SignedEntityType_MITHRIL_STAKE_DISTRIBUTION
}

func (x *MithrilCertificate) GetMetadata() *CertificateMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MithrilCertificate) GetProtocolMessage() *ProtocolMessage {
	if x != nil {
		return x.ProtocolMessage
	}
	return nil
}

func (x *MithrilCertificate) GetSignedMessage() string {
	if x != nil {
		return x.SignedMessage
	}
	return ""
}

func (x *MithrilCertificate) GetAggregateVerificationKey() string {
	if x != nil {
		return x.AggregateVerificationKey
	}
	return ""
}

func (x *MithrilCertificate) GetSignature() CertificateSignature {
	if x != nil {
		return x.Signature
	}
	return CertificateSignature_GENESIS_SIGNATURE
}

type CertificateMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolVersion    string                     `protobuf:"bytes,1,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	ProtocolParameters *MithrilProtocolParameters `protobuf:"bytes,2,opt,name=protocol_parameters,json=protocolParameters,proto3" json:"protocol_parameters,omitempty"`
	InitiatedAt        uint64                     `protobuf:"varint,3,opt,name=initiatedAt,proto3" json:"initiatedAt,omitempty"`
	SealedAt           uint64                     `protobuf:"varint,4,opt,name=sealedAt,proto3" json:"sealedAt,omitempty"`
	Signers            []*SignerWithStake         `protobuf:"bytes,5,rep,name=signers,proto3" json:"signers,omitempty"`
}

func (x *CertificateMetadata) Reset() {
	*x = CertificateMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateMetadata) ProtoMessage() {}

// Deprecated: Use CertificateMetadata.ProtoReflect.Descriptor instead.
func (*CertificateMetadata) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{8}
}

func (x *CertificateMetadata) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *CertificateMetadata) GetProtocolParameters() *MithrilProtocolParameters {
	if x != nil {
		return x.ProtocolParameters
	}
	return nil
}

func (x *CertificateMetadata) GetInitiatedAt() uint64 {
	if x != nil {
		return x.InitiatedAt
	}
	return 0
}

func (x *CertificateMetadata) GetSealedAt() uint64 {
	if x != nil {
		return x.SealedAt
	}
	return 0
}

func (x *CertificateMetadata) GetSigners() []*SignerWithStake {
	if x != nil {
		return x.Signers
	}
	return nil
}

type SignerWithStake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyId string `protobuf:"bytes,1,opt,name=party_id,json=partyId,proto3" json:"party_id,omitempty"`
	Stake   uint64 `protobuf:"varint,2,opt,name=stake,proto3" json:"stake,omitempty"`
}

func (x *SignerWithStake) Reset() {
	*x = SignerWithStake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignerWithStake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignerWithStake) ProtoMessage() {}

// Deprecated: Use SignerWithStake.ProtoReflect.Descriptor instead.
func (*SignerWithStake) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{9}
}

func (x *SignerWithStake) GetPartyId() string {
	if x != nil {
		return x.PartyId
	}
	return ""
}

func (x *SignerWithStake) GetStake() uint64 {
	if x != nil {
		return x.Stake
	}
	return 0
}

type ProtocolMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageParts []*MessagePart `protobuf:"bytes,1,rep,name=message_parts,json=messageParts,proto3" json:"message_parts,omitempty"`
}

func (x *ProtocolMessage) Reset() {
	*x = ProtocolMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolMessage) ProtoMessage() {}

// Deprecated: Use ProtocolMessage.ProtoReflect.Descriptor instead.
func (*ProtocolMessage) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{10}
}

func (x *ProtocolMessage) GetMessageParts() []*MessagePart {
	if x != nil {
		return x.MessageParts
	}
	return nil
}

type MessagePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtocolMessagePartKey   ProtocolMessagePartKey `protobuf:"varint,1,opt,name=protocol_message_part_key,json=protocolMessagePartKey,proto3,enum=ibc.clients.mithril.v1.ProtocolMessagePartKey" json:"protocol_message_part_key,omitempty"`
	ProtocolMessagePartValue string                 `protobuf:"bytes,2,opt,name=protocol_message_part_value,json=protocolMessagePartValue,proto3" json:"protocol_message_part_value,omitempty"`
}

func (x *MessagePart) Reset() {
	*x = MessagePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePart) ProtoMessage() {}

// Deprecated: Use MessagePart.ProtoReflect.Descriptor instead.
func (*MessagePart) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{11}
}

func (x *MessagePart) GetProtocolMessagePartKey() ProtocolMessagePartKey {
	if x != nil {
		return x.ProtocolMessagePartKey
	}
	return ProtocolMessagePartKey_SNAPSHOT_DIGEST
}

func (x *MessagePart) GetProtocolMessagePartValue() string {
	if x != nil {
		return x.ProtocolMessagePartValue
	}
	return ""
}

type MithrilProtocolParameters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Quorum parameter
	K uint64 `protobuf:"varint,1,opt,name=k,proto3" json:"k,omitempty"`
	// Security parameter (number of lotteries)
	M uint64 `protobuf:"varint,2,opt,name=m,proto3" json:"m,omitempty"`
	// f in phi(w) = 1 - (1 - f)^w, where w is the stake of a participant
	PhiF uint64 `protobuf:"varint,3,opt,name=phi_f,json=phiF,proto3" json:"phi_f,omitempty"`
}

func (x *MithrilProtocolParameters) Reset() {
	*x = MithrilProtocolParameters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ibc_clients_mithril_v1_mithril_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MithrilProtocolParameters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MithrilProtocolParameters) ProtoMessage() {}

// Deprecated: Use MithrilProtocolParameters.ProtoReflect.Descriptor instead.
func (*MithrilProtocolParameters) Descriptor() ([]byte, []int) {
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP(), []int{12}
}

func (x *MithrilProtocolParameters) GetK() uint64 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *MithrilProtocolParameters) GetM() uint64 {
	if x != nil {
		return x.M
	}
	return 0
}

func (x *MithrilProtocolParameters) GetPhiF() uint64 {
	if x != nil {
		return x.PhiF
	}
	return 0
}

var File_ibc_clients_mithril_v1_mithril_proto protoreflect.FileDescriptor

var file_ibc_clients_mithril_v1_mithril_proto_rawDesc = []byte{
	0x0a, 0x24, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x69,
	0x74, 0x68, 0x72, 0x69, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x14,
	0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x39, 0x0a, 0x06, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x3a, 0x08, 0x88, 0xa0, 0x1f, 0x00, 0x98, 0xa0, 0x1f, 0x00, 0x22,
	0xb2, 0x03, 0x0a, 0x0b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x0d, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x52, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x43, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x4c, 0x0a, 0x0f, 0x74, 0x72, 0x75,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xc8,
	0xde, 0x1f, 0x00, 0x98, 0xdf, 0x1f, 0x01, 0x52, 0x0e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x62, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69,
	0x74, 0x68, 0x72, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x74, 0x68, 0x3a, 0x04,
	0x88, 0xa0, 0x1f, 0x00, 0x22, 0x82, 0x02, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73,
	0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36, 0x0a, 0x18, 0x66, 0x63, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x6d, 0x73,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x66, 0x63, 0x48, 0x61, 0x73, 0x68, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x73, 0x64, 0x12, 0x2f, 0x0a,
	0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x5f, 0x6d, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x48, 0x61, 0x73, 0x68, 0x4d, 0x73, 0x64, 0x12, 0x34,
	0x0a, 0x17, 0x66, 0x63, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x66, 0x63, 0x48, 0x61, 0x73, 0x68, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x54, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x63,
	0x65, 0x72, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x65, 0x72, 0x74, 0x48, 0x61, 0x73,
	0x68, 0x54, 0x73, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xff, 0x01, 0x0a, 0x0c, 0x4d, 0x69,
	0x73, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x12, 0x1f, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x63, 0x0a, 0x10, 0x6d,
	0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x12, 0xe2, 0xde,
	0x1f, 0x0e, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x31,
	0x52, 0x0e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x31,
	0x12, 0x63, 0x0a, 0x10, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x42, 0x12, 0xe2, 0xde, 0x1f, 0x0e, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x32, 0x52, 0x0e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x32, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xe3, 0x03, 0x0a, 0x0d,
	0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x6e, 0x0a,
	0x1a, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x74, 0x68, 0x72,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x18, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7f, 0x0a,
	0x26, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68,
	0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x23, 0x6d, 0x69, 0x74, 0x68, 0x72,
	0x69, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x65,
	0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69,
	0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72,
	0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x74, 0x0a, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x63, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69,
	0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x1e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x3a, 0x04, 0x88, 0xa0, 0x1f,
	0x00, 0x22, 0xcd, 0x02, 0x0a, 0x18, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x55, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x5f,
	0x77, 0x69, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d,
	0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x73, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x60, 0x0a, 0x12, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x3a, 0x04, 0x88, 0xa0, 0x1f,
	0x00, 0x22, 0xe1, 0x01, 0x0a, 0x1a, 0x43, 0x61, 0x72, 0x64, 0x61, 0x6e, 0x6f, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x5f,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x6b,
	0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x3a,
	0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x8f, 0x04, 0x0a, 0x12, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69,
	0x6c, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x56, 0x0a, 0x12, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x52, 0x0a, 0x10,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0xab, 0x02, 0x0a, 0x13, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x62, 0x0a, 0x13, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x41, 0x0a, 0x07,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68,
	0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x3a,
	0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x48, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x57,
	0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x22,
	0x61, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61,
	0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x62, 0x63, 0x2e,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x52, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x3a, 0x04, 0x88, 0xa0,
	0x1f, 0x00, 0x22, 0xbd, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x12, 0x69, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x3d, 0x0a,
	0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x04, 0x88, 0xa0,
	0x1f, 0x00, 0x22, 0x52, 0x0a, 0x19, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12,
	0x0c, 0x0a, 0x01, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x6b, 0x12, 0x0c, 0x0a,
	0x01, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x01, 0x6d, 0x12, 0x13, 0x0a, 0x05, 0x70,
	0x68, 0x69, 0x5f, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x68, 0x69, 0x46,
	0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x2a, 0xa0, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4e, 0x41, 0x50, 0x53, 0x48, 0x4f, 0x54, 0x5f, 0x44, 0x49,
	0x47, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x41, 0x52, 0x44, 0x41, 0x4e,
	0x4f, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x4d,
	0x45, 0x52, 0x4b, 0x4c, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x54, 0x10, 0x01, 0x12, 0x23, 0x0a, 0x1f,
	0x4e, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x47, 0x47, 0x52, 0x45, 0x47, 0x41, 0x54, 0x45, 0x5f, 0x56,
	0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x10,
	0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x4d, 0x4d, 0x55,
	0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x10, 0x03, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x2a, 0x52, 0x0a, 0x10, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x1a, 0x4d, 0x49, 0x54, 0x48, 0x52, 0x49, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x4b, 0x45, 0x5f, 0x44,
	0x49, 0x53, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x43, 0x41, 0x52, 0x44, 0x41, 0x4e, 0x4f, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x2a, 0x48, 0x0a,
	0x14, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x4e, 0x45, 0x53, 0x49, 0x53,
	0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x10,
	0x01, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00, 0x42, 0xd8, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e,
	0x69, 0x62, 0x63, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x6d, 0x69, 0x74, 0x68,
	0x72, 0x69, 0x6c, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x31, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64,
	0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x62, 0x63, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x2f, 0x76, 0x31, 0x3b,
	0x6d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x49, 0x43, 0x4d, 0xaa,
	0x02, 0x16, 0x49, 0x62, 0x63, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x4d, 0x69,
	0x74, 0x68, 0x72, 0x69, 0x6c, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x16, 0x49, 0x62, 0x63, 0x5c, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5c, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x22, 0x49, 0x62, 0x63, 0x5c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5c,
	0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x49, 0x62, 0x63, 0x3a, 0x3a, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x4d, 0x69, 0x74, 0x68, 0x72, 0x69, 0x6c, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ibc_clients_mithril_v1_mithril_proto_rawDescOnce sync.Once
	file_ibc_clients_mithril_v1_mithril_proto_rawDescData = file_ibc_clients_mithril_v1_mithril_proto_rawDesc
)

func file_ibc_clients_mithril_v1_mithril_proto_rawDescGZIP() []byte {
	file_ibc_clients_mithril_v1_mithril_proto_rawDescOnce.Do(func() {
		file_ibc_clients_mithril_v1_mithril_proto_rawDescData = protoimpl.X.CompressGZIP(file_ibc_clients_mithril_v1_mithril_proto_rawDescData)
	})
	return file_ibc_clients_mithril_v1_mithril_proto_rawDescData
}

var file_ibc_clients_mithril_v1_mithril_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_ibc_clients_mithril_v1_mithril_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_ibc_clients_mithril_v1_mithril_proto_goTypes = []interface{}{
	(ProtocolMessagePartKey)(0),        // 0: ibc.clients.mithril.v1.ProtocolMessagePartKey
	(SignedEntityType)(0),              // 1: ibc.clients.mithril.v1.SignedEntityType
	(CertificateSignature)(0),          // 2: ibc.clients.mithril.v1.CertificateSignature
	(*Height)(nil),                     // 3: ibc.clients.mithril.v1.Height
	(*ClientState)(nil),                // 4: ibc.clients.mithril.v1.ClientState
	(*ConsensusState)(nil),             // 5: ibc.clients.mithril.v1.ConsensusState
	(*Misbehaviour)(nil),               // 6: ibc.clients.mithril.v1.Misbehaviour
	(*MithrilHeader)(nil),              // 7: ibc.clients.mithril.v1.MithrilHeader
	(*MithrilStakeDistribution)(nil),   // 8: ibc.clients.mithril.v1.MithrilStakeDistribution
	(*CardanoTransactionSnapshot)(nil), // 9: ibc.clients.mithril.v1.CardanoTransactionSnapshot
	(*MithrilCertificate)(nil),         // 10: ibc.clients.mithril.v1.MithrilCertificate
	(*CertificateMetadata)(nil),        // 11: ibc.clients.mithril.v1.CertificateMetadata
	(*SignerWithStake)(nil),            // 12: ibc.clients.mithril.v1.SignerWithStake
	(*ProtocolMessage)(nil),            // 13: ibc.clients.mithril.v1.ProtocolMessage
	(*MessagePart)(nil),                // 14: ibc.clients.mithril.v1.MessagePart
	(*MithrilProtocolParameters)(nil),  // 15: ibc.clients.mithril.v1.MithrilProtocolParameters
	(*durationpb.Duration)(nil),        // 16: google.protobuf.Duration
}
var file_ibc_clients_mithril_v1_mithril_proto_depIdxs = []int32{
	3,  // 0: ibc.clients.mithril.v1.ClientState.latest_height:type_name -> ibc.clients.mithril.v1.Height
	3,  // 1: ibc.clients.mithril.v1.ClientState.frozen_height:type_name -> ibc.clients.mithril.v1.Height
	16, // 2: ibc.clients.mithril.v1.ClientState.trusting_period:type_name -> google.protobuf.Duration
	15, // 3: ibc.clients.mithril.v1.ClientState.protocol_parameters:type_name -> ibc.clients.mithril.v1.MithrilProtocolParameters
	7,  // 4: ibc.clients.mithril.v1.Misbehaviour.mithril_header_1:type_name -> ibc.clients.mithril.v1.MithrilHeader
	7,  // 5: ibc.clients.mithril.v1.Misbehaviour.mithril_header_2:type_name -> ibc.clients.mithril.v1.MithrilHeader
	8,  // 6: ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution:type_name -> ibc.clients.mithril.v1.MithrilStakeDistribution
	10, // 7: ibc.clients.mithril.v1.MithrilHeader.mithril_stake_distribution_certificate:type_name -> ibc.clients.mithril.v1.MithrilCertificate
	9,  // 8: ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot:type_name -> ibc.clients.mithril.v1.CardanoTransactionSnapshot
	10, // 9: ibc.clients.mithril.v1.MithrilHeader.transaction_snapshot_certificate:type_name -> ibc.clients.mithril.v1.MithrilCertificate
	12, // 10: ibc.clients.mithril.v1.MithrilStakeDistribution.signers_with_stake:type_name -> ibc.clients.mithril.v1.SignerWithStake
	15, // 11: ibc.clients.mithril.v1.MithrilStakeDistribution.protocol_parameter:type_name -> ibc.clients.mithril.v1.MithrilProtocolParameters
	3,  // 12: ibc.clients.mithril.v1.CardanoTransactionSnapshot.height:type_name -> ibc.clients.mithril.v1.Height
	1,  // 13: ibc.clients.mithril.v1.MithrilCertificate.signed_entity_type:type_name -> ibc.clients.mithril.v1.SignedEntityType
	11, // 14: ibc.clients.mithril.v1.MithrilCertificate.metadata:type_name -> ibc.clients.mithril.v1.CertificateMetadata
	13, // 15: ibc.clients.mithril.v1.MithrilCertificate.protocol_message:type_name -> ibc.clients.mithril.v1.ProtocolMessage
	2,  // 16: ibc.clients.mithril.v1.MithrilCertificate.signature:type_name -> ibc.clients.mithril.v1.CertificateSignature
	15, // 17: ibc.clients.mithril.v1.CertificateMetadata.protocol_parameters:type_name -> ibc.clients.mithril.v1.MithrilProtocolParameters
	12, // 18: ibc.clients.mithril.v1.CertificateMetadata.signers:type_name -> ibc.clients.mithril.v1.SignerWithStake
	14, // 19: ibc.clients.mithril.v1.ProtocolMessage.message_parts:type_name -> ibc.clients.mithril.v1.MessagePart
	0,  // 20: ibc.clients.mithril.v1.MessagePart.protocol_message_part_key:type_name -> ibc.clients.mithril.v1.ProtocolMessagePartKey
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_ibc_clients_mithril_v1_mithril_proto_init() }
func file_ibc_clients_mithril_v1_mithril_proto_init() {
	if File_ibc_clients_mithril_v1_mithril_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Height); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsensusState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Misbehaviour); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MithrilHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MithrilStakeDistribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardanoTransactionSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MithrilCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignerWithStake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ibc_clients_mithril_v1_mithril_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MithrilProtocolParameters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ibc_clients_mithril_v1_mithril_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ibc_clients_mithril_v1_mithril_proto_goTypes,
		DependencyIndexes: file_ibc_clients_mithril_v1_mithril_proto_depIdxs,
		EnumInfos:         file_ibc_clients_mithril_v1_mithril_proto_enumTypes,
		MessageInfos:      file_ibc_clients_mithril_v1_mithril_proto_msgTypes,
	}.Build()
	File_ibc_clients_mithril_v1_mithril_proto = out.File
	file_ibc_clients_mithril_v1_mithril_proto_rawDesc = nil
	file_ibc_clients_mithril_v1_mithril_proto_goTypes = nil
	file_ibc_clients_mithril_v1_mithril_proto_depIdxs = nil
}
